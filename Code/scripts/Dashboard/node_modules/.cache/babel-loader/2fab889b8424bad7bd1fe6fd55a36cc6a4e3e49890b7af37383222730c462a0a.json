{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard_ComparisionVersion\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport PM25DataLoader from './PM25DataLoader';\nimport PM25Canvas from './PM25Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\nconst CITIES_JSON = 'cities_with_coords.json';\n\n// PM2.5色阶区间和颜色，与MultiTrendCharts.js保持一致\nconst bounds = [0, 5, 10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 99999];\nconst c_list = ['rgb(164,255,255)',\n// 0 - 5\n'rgb(176,218,233)',\n// 5 - 10\n'rgb(176,206,237)',\n// 10 - 15\n'rgb(249,224,71)',\n// 15 - 20\n'rgb(242,200,75)',\n// 20 - 30\n'rgb(241,166,63)',\n// 30 - 40\n'rgb(233,135,37)',\n// 40 - 50\n'rgb(175,69,83)',\n// 50 - 60\n'rgb(134,59,71)',\n// 60 - 70\n'rgb(103,58,61)',\n// 70 - 80\n'rgb(70,47,48)',\n// 80 - 90\n'rgb(37,36,36)' // 90+\n];\nfunction getColor(val) {\n  if (val === null || val === undefined || isNaN(val)) return '#e0e0e0';\n  for (let i = 0; i < bounds.length - 1; ++i) {\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\n  }\n  return c_list[c_list.length - 1];\n}\nfunction Map({\n  onCitySelect,\n  selectedCities,\n  maxCities = 2\n}) {\n  _s();\n  const svgRef = useRef();\n  const canvasRef = useRef();\n  const [cities, setCities] = useState([]);\n  const [world, setWorld] = useState(null);\n  const [pm25Loader, setPm25Loader] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [transform, setTransform] = useState({\n    k: 1,\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMouse, setLastMouse] = useState({\n    x: 0,\n    y: 0\n  });\n  const [projection, setProjection] = useState(null);\n\n  // 获取地理位置的PM2.5值\n  const getPM25ForLocation = (lat, lon) => {\n    if (!pm25Loader) return null;\n    return pm25Loader.getPM25Value(lat, lon);\n  };\n\n  // 加载数据\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        const [worldData, citiesData] = await Promise.all([d3.json(WORLD_GEOJSON_URL), d3.json(CITIES_JSON)]);\n        if (worldData && worldData.features) {\n          setWorld(worldData);\n        }\n        if (citiesData && Array.isArray(citiesData)) {\n          setCities(citiesData);\n        }\n\n        // 加载PM2.5数据\n        const loader = new PM25DataLoader();\n        const success = await loader.loadData();\n        if (success) {\n          setPm25Loader(loader);\n          console.log('PM2.5 data stats:', loader.getDataStats());\n        } else {\n          console.warn('PM2.5 data loading failed, using default colors');\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // 鼠标事件处理\n  const handleMouseDown = event => {\n    setIsDragging(true);\n    setLastMouse({\n      x: event.clientX,\n      y: event.clientY\n    });\n    event.preventDefault();\n  };\n  const handleMouseMove = event => {\n    if (!isDragging) return;\n    const deltaX = event.clientX - lastMouse.x;\n    const deltaY = event.clientY - lastMouse.y;\n    setTransform(prev => ({\n      ...prev,\n      x: prev.x + deltaX,\n      y: prev.y + deltaY\n    }));\n    setLastMouse({\n      x: event.clientX,\n      y: event.clientY\n    });\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleWheel = event => {\n    event.preventDefault();\n    const rect = svgRef.current.getBoundingClientRect();\n    const mouseX = event.clientX - rect.left;\n    const mouseY = event.clientY - rect.top;\n    const scale = event.deltaY > 0 ? 0.9 : 1.1;\n    const newK = Math.min(Math.max(transform.k * scale, 0.5), 8);\n    if (newK !== transform.k) {\n      const factor = newK / transform.k;\n      setTransform(prev => ({\n        k: newK,\n        x: mouseX - factor * (mouseX - prev.x),\n        y: mouseY - factor * (mouseY - prev.y)\n      }));\n    }\n  };\n\n  // 缩放控制函数\n  const handleZoomIn = () => {\n    setTransform(prev => ({\n      ...prev,\n      k: Math.min(prev.k * 1.5, 8)\n    }));\n  };\n  const handleZoomOut = () => {\n    setTransform(prev => ({\n      ...prev,\n      k: Math.max(prev.k / 1.5, 0.5)\n    }));\n  };\n  const handleReset = () => {\n    setTransform({\n      k: 1,\n      x: 0,\n      y: 0\n    });\n  };\n\n  // 绘制地图\n  useEffect(() => {\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current) return;\n    try {\n      const width = 1000,\n        height = 500;\n      const svg = d3.select(svgRef.current);\n\n      // 清除之前的内容\n      svg.selectAll('*').remove();\n\n      // 设置SVG尺寸\n      svg.attr('width', width).attr('height', height);\n\n      // 投影\n      const mapProjection = d3.geoNaturalEarth1().fitSize([width, height], world);\n      const path = d3.geoPath().projection(mapProjection);\n      setProjection(mapProjection);\n\n      // 创建主要的g元素用于缩放变换\n      const g = svg.append('g').attr('class', 'map-group');\n\n      // 绘制国家\n      g.append('g').attr('class', 'countries').selectAll('path').data(world.features).enter().append('path').attr('d', path).attr('fill', '#f0f0f0').attr('stroke', '#666').attr('stroke-width', 0.5).style('pointer-events', 'all').append('title').text(d => {\n        if (!d || !d.properties) return 'Unknown';\n        const countryName = d.properties.NAME || d.properties.name || 'Unknown';\n        try {\n          const centroid = d3.geoCentroid(d);\n          if (centroid && centroid.length >= 2) {\n            const [lon, lat] = centroid;\n            const pm25Value = getPM25ForLocation(lat, lon);\n            return pm25Value !== null ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${countryName}`;\n          }\n        } catch (error) {\n          console.warn('Error calculating centroid for country:', countryName, error);\n        }\n        return countryName;\n      });\n\n      // 绘制城市点\n      const citiesGroup = g.append('g').attr('class', 'cities');\n      cities.forEach(city => {\n        const projected = mapProjection([city.lng, city.lat]);\n        if (projected) {\n          citiesGroup.append('circle').attr('cx', projected[0]).attr('cy', projected[1]).attr('r', 5).attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2').attr('stroke', '#fff').attr('stroke-width', 2).style('cursor', 'pointer').on('click', () => {\n            if (onCitySelect) onCitySelect(city);\n          }).append('title').text(() => {\n            const pm25Value = getPM25ForLocation(city.lat, city.lng);\n            return pm25Value !== null ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${city.city}, ${city.country}\\nPM2.5: No data`;\n          });\n        }\n      });\n\n      // 应用变换\n      g.attr('transform', `translate(${transform.x}, ${transform.y}) scale(${transform.k})`);\n\n      // 调整元素大小\n      if (transform.k > 0) {\n        citiesGroup.selectAll('circle').attr('r', 5 / transform.k).attr('stroke-width', 2 / transform.k);\n        g.selectAll('.countries path').attr('stroke-width', 0.5 / transform.k);\n      }\n\n      // 添加缩放控制按钮\n      const controls = svg.append('g').attr('class', 'zoom-controls');\n      const buttonData = [{\n        text: '+',\n        action: handleZoomIn,\n        title: '放大'\n      }, {\n        text: '−',\n        action: handleZoomOut,\n        title: '缩小'\n      }, {\n        text: '⌂',\n        action: handleReset,\n        title: '重置'\n      }];\n      buttonData.forEach((btn, i) => {\n        const button = controls.append('g').attr('class', 'zoom-button').attr('transform', `translate(20, ${20 + i * 35})`).style('cursor', 'pointer').on('click', btn.action);\n        button.append('rect').attr('width', 30).attr('height', 30).attr('fill', 'white').attr('stroke', '#ccc').attr('rx', 3);\n        button.append('text').attr('x', 15).attr('y', 20).attr('text-anchor', 'middle').attr('font-size', 16).attr('font-weight', 'bold').text(btn.text);\n        button.append('title').text(btn.title);\n      });\n\n      // 初始渲染Canvas\n      if (canvasRef.current && pm25Loader && pm25Loader.data) {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, mapProjection, transform, cities, width, height);\n      }\n    } catch (error) {\n      console.error('Error rendering map:', error);\n    }\n  }, [world, cities, selectedCities, onCitySelect, isLoading, transform, pm25Loader]);\n\n  // 添加全局鼠标事件监听器\n  useEffect(() => {\n    const handleGlobalMouseMove = event => handleMouseMove(event);\n    const handleGlobalMouseUp = () => handleMouseUp();\n    if (isDragging) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n    };\n  }, [isDragging, lastMouse]);\n\n  // 添加wheel事件监听器\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    svg.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => {\n      svg.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: 20,\n        color: '#666'\n      },\n      children: \"Loading PM2.5 data and map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          cursor: isDragging ? 'grabbing' : 'grab'\n        },\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1000,\n        height: 500,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        color: '#888'\n      },\n      children: [\"\\u62D6\\u62FD\\u5E73\\u79FB\\uFF0C\\u6EDA\\u8F6E\\u7F29\\u653E\\uFF0C\\u70B9\\u51FB\\u6309\\u94AE\\u63A7\\u5236 - \\u7F29\\u653E\\u6BD4\\u4F8B: \", transform.k.toFixed(2), \"x\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"Zk357MD/YGMPSorRYk8+P7sCqUs=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","PM25DataLoader","PM25Canvas","jsxDEV","_jsxDEV","WORLD_GEOJSON_URL","CITIES_JSON","bounds","c_list","getColor","val","undefined","isNaN","i","length","Map","onCitySelect","selectedCities","maxCities","_s","svgRef","canvasRef","cities","setCities","world","setWorld","pm25Loader","setPm25Loader","isLoading","setIsLoading","transform","setTransform","k","x","y","isDragging","setIsDragging","lastMouse","setLastMouse","projection","setProjection","getPM25ForLocation","lat","lon","getPM25Value","loadData","worldData","citiesData","Promise","all","json","features","Array","isArray","loader","success","console","log","getDataStats","warn","error","handleMouseDown","event","clientX","clientY","preventDefault","handleMouseMove","deltaX","deltaY","prev","handleMouseUp","handleWheel","rect","current","getBoundingClientRect","mouseX","left","mouseY","top","scale","newK","Math","min","max","factor","handleZoomIn","handleZoomOut","handleReset","width","height","svg","select","selectAll","remove","attr","mapProjection","geoNaturalEarth1","fitSize","path","geoPath","g","append","data","enter","style","text","d","properties","countryName","NAME","name","centroid","geoCentroid","pm25Value","toFixed","citiesGroup","forEach","city","projected","lng","find","c","country","on","controls","buttonData","action","title","btn","button","canvas","ctx","getContext","renderPM25Data","handleGlobalMouseMove","handleGlobalMouseUp","document","addEventListener","removeEventListener","passive","textAlign","margin","color","children","fileName","_jsxFileName","lineNumber","columnNumber","position","display","ref","cursor","onMouseDown","pointerEvents","zIndex","marginTop","_c","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard_ComparisionVersion/src/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport PM25DataLoader from './PM25DataLoader';\r\nimport PM25Canvas from './PM25Canvas';\r\n\r\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\r\nconst CITIES_JSON = 'cities_with_coords.json';\r\n\r\n// PM2.5色阶区间和颜色，与MultiTrendCharts.js保持一致\r\nconst bounds = [0, 5, 10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 99999];\r\nconst c_list = [\r\n  'rgb(164,255,255)',  // 0 - 5\r\n  'rgb(176,218,233)',  // 5 - 10\r\n  'rgb(176,206,237)',  // 10 - 15\r\n  'rgb(249,224,71)',   // 15 - 20\r\n  'rgb(242,200,75)',   // 20 - 30\r\n  'rgb(241,166,63)',   // 30 - 40\r\n  'rgb(233,135,37)',   // 40 - 50\r\n  'rgb(175,69,83)',    // 50 - 60\r\n  'rgb(134,59,71)',    // 60 - 70\r\n  'rgb(103,58,61)',    // 70 - 80\r\n  'rgb(70,47,48)',     // 80 - 90\r\n  'rgb(37,36,36)',     // 90+\r\n];\r\n\r\nfunction getColor(val) {\r\n  if (val === null || val === undefined || isNaN(val)) return '#e0e0e0';\r\n  for (let i = 0; i < bounds.length - 1; ++i) {\r\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\r\n  }\r\n  return c_list[c_list.length - 1];\r\n}\r\n\r\nfunction Map({ onCitySelect, selectedCities, maxCities = 2 }) {\r\n  const svgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const [cities, setCities] = useState([]);\r\n  const [world, setWorld] = useState(null);\r\n  const [pm25Loader, setPm25Loader] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [transform, setTransform] = useState({ k: 1, x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [lastMouse, setLastMouse] = useState({ x: 0, y: 0 });\r\n  const [projection, setProjection] = useState(null);\r\n\r\n  // 获取地理位置的PM2.5值\r\n  const getPM25ForLocation = (lat, lon) => {\r\n    if (!pm25Loader) return null;\r\n    return pm25Loader.getPM25Value(lat, lon);\r\n  };\r\n\r\n  // 加载数据\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const [worldData, citiesData] = await Promise.all([\r\n          d3.json(WORLD_GEOJSON_URL),\r\n          d3.json(CITIES_JSON)\r\n        ]);\r\n        \r\n        if (worldData && worldData.features) {\r\n          setWorld(worldData);\r\n        }\r\n        if (citiesData && Array.isArray(citiesData)) {\r\n          setCities(citiesData);\r\n        }\r\n\r\n        // 加载PM2.5数据\r\n        const loader = new PM25DataLoader();\r\n        const success = await loader.loadData();\r\n        if (success) {\r\n          setPm25Loader(loader);\r\n          console.log('PM2.5 data stats:', loader.getDataStats());\r\n        } else {\r\n          console.warn('PM2.5 data loading failed, using default colors');\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // 鼠标事件处理\r\n  const handleMouseDown = (event) => {\r\n    setIsDragging(true);\r\n    setLastMouse({ x: event.clientX, y: event.clientY });\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    if (!isDragging) return;\r\n    \r\n    const deltaX = event.clientX - lastMouse.x;\r\n    const deltaY = event.clientY - lastMouse.y;\r\n    \r\n    setTransform(prev => ({\r\n      ...prev,\r\n      x: prev.x + deltaX,\r\n      y: prev.y + deltaY\r\n    }));\r\n    \r\n    setLastMouse({ x: event.clientX, y: event.clientY });\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleWheel = (event) => {\r\n    event.preventDefault();\r\n    const rect = svgRef.current.getBoundingClientRect();\r\n    const mouseX = event.clientX - rect.left;\r\n    const mouseY = event.clientY - rect.top;\r\n    \r\n    const scale = event.deltaY > 0 ? 0.9 : 1.1;\r\n    const newK = Math.min(Math.max(transform.k * scale, 0.5), 8);\r\n    \r\n    if (newK !== transform.k) {\r\n      const factor = newK / transform.k;\r\n      setTransform(prev => ({\r\n        k: newK,\r\n        x: mouseX - factor * (mouseX - prev.x),\r\n        y: mouseY - factor * (mouseY - prev.y)\r\n      }));\r\n    }\r\n  };\r\n\r\n  // 缩放控制函数\r\n  const handleZoomIn = () => {\r\n    setTransform(prev => ({\r\n      ...prev,\r\n      k: Math.min(prev.k * 1.5, 8)\r\n    }));\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setTransform(prev => ({\r\n      ...prev,\r\n      k: Math.max(prev.k / 1.5, 0.5)\r\n    }));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTransform({ k: 1, x: 0, y: 0 });\r\n  };\r\n\r\n  // 绘制地图\r\n  useEffect(() => {\r\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current) return;\r\n    \r\n    try {\r\n      const width = 1000, height = 500;\r\n      const svg = d3.select(svgRef.current);\r\n      \r\n      // 清除之前的内容\r\n      svg.selectAll('*').remove();\r\n      \r\n      // 设置SVG尺寸\r\n      svg.attr('width', width).attr('height', height);\r\n\r\n      // 投影\r\n      const mapProjection = d3.geoNaturalEarth1().fitSize([width, height], world);\r\n      const path = d3.geoPath().projection(mapProjection);\r\n      setProjection(mapProjection);\r\n\r\n      // 创建主要的g元素用于缩放变换\r\n      const g = svg.append('g').attr('class', 'map-group');\r\n\r\n      // 绘制国家\r\n      g.append('g')\r\n        .attr('class', 'countries')\r\n        .selectAll('path')\r\n        .data(world.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('d', path)\r\n        .attr('fill', '#f0f0f0')\r\n        .attr('stroke', '#666')\r\n        .attr('stroke-width', 0.5)\r\n        .style('pointer-events', 'all')\r\n        .append('title')\r\n        .text(d => {\r\n          if (!d || !d.properties) return 'Unknown';\r\n          const countryName = d.properties.NAME || d.properties.name || 'Unknown';\r\n          try {\r\n            const centroid = d3.geoCentroid(d);\r\n            if (centroid && centroid.length >= 2) {\r\n              const [lon, lat] = centroid;\r\n              const pm25Value = getPM25ForLocation(lat, lon);\r\n              return pm25Value !== null \r\n                ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                : `${countryName}`;\r\n            }\r\n          } catch (error) {\r\n            console.warn('Error calculating centroid for country:', countryName, error);\r\n          }\r\n          return countryName;\r\n        });\r\n\r\n      // 绘制城市点\r\n      const citiesGroup = g.append('g').attr('class', 'cities');\r\n      \r\n      cities.forEach(city => {\r\n        const projected = mapProjection([city.lng, city.lat]);\r\n        if (projected) {\r\n          citiesGroup.append('circle')\r\n            .attr('cx', projected[0])\r\n            .attr('cy', projected[1])\r\n            .attr('r', 5)\r\n            .attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2')\r\n            .attr('stroke', '#fff')\r\n            .attr('stroke-width', 2)\r\n            .style('cursor', 'pointer')\r\n            .on('click', () => {\r\n              if (onCitySelect) onCitySelect(city);\r\n            })\r\n            .append('title')\r\n            .text(() => {\r\n              const pm25Value = getPM25ForLocation(city.lat, city.lng);\r\n              return pm25Value !== null \r\n                ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                : `${city.city}, ${city.country}\\nPM2.5: No data`;\r\n            });\r\n        }\r\n      });\r\n\r\n      // 应用变换\r\n      g.attr('transform', `translate(${transform.x}, ${transform.y}) scale(${transform.k})`);\r\n      \r\n      // 调整元素大小\r\n      if (transform.k > 0) {\r\n        citiesGroup.selectAll('circle')\r\n          .attr('r', 5 / transform.k)\r\n          .attr('stroke-width', 2 / transform.k);\r\n        \r\n        g.selectAll('.countries path')\r\n          .attr('stroke-width', 0.5 / transform.k);\r\n      }\r\n\r\n      // 添加缩放控制按钮\r\n      const controls = svg.append('g').attr('class', 'zoom-controls');\r\n      \r\n      const buttonData = [\r\n        { text: '+', action: handleZoomIn, title: '放大' },\r\n        { text: '−', action: handleZoomOut, title: '缩小' },\r\n        { text: '⌂', action: handleReset, title: '重置' }\r\n      ];\r\n\r\n      buttonData.forEach((btn, i) => {\r\n        const button = controls.append('g')\r\n          .attr('class', 'zoom-button')\r\n          .attr('transform', `translate(20, ${20 + i * 35})`)\r\n          .style('cursor', 'pointer')\r\n          .on('click', btn.action);\r\n\r\n        button.append('rect')\r\n          .attr('width', 30)\r\n          .attr('height', 30)\r\n          .attr('fill', 'white')\r\n          .attr('stroke', '#ccc')\r\n          .attr('rx', 3);\r\n\r\n        button.append('text')\r\n          .attr('x', 15)\r\n          .attr('y', 20)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('font-size', 16)\r\n          .attr('font-weight', 'bold')\r\n          .text(btn.text);\r\n\r\n        button.append('title').text(btn.title);\r\n      });\r\n\r\n      // 初始渲染Canvas\r\n      if (canvasRef.current && pm25Loader && pm25Loader.data) {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, mapProjection, transform, cities, width, height);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error rendering map:', error);\r\n    }\r\n  }, [world, cities, selectedCities, onCitySelect, isLoading, transform, pm25Loader]);\r\n\r\n  // 添加全局鼠标事件监听器\r\n  useEffect(() => {\r\n    const handleGlobalMouseMove = (event) => handleMouseMove(event);\r\n    const handleGlobalMouseUp = () => handleMouseUp();\r\n\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleGlobalMouseMove);\r\n      document.addEventListener('mouseup', handleGlobalMouseUp);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\r\n    };\r\n  }, [isDragging, lastMouse]);\r\n\r\n  // 添加wheel事件监听器\r\n  useEffect(() => {\r\n    const svg = svgRef.current;\r\n    if (!svg) return;\r\n\r\n    svg.addEventListener('wheel', handleWheel, { passive: false });\r\n\r\n    return () => {\r\n      svg.removeEventListener('wheel', handleWheel);\r\n    };\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', margin: 20, color: '#666' }}>\r\n        Loading PM2.5 data and map...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div style={{ position: 'relative', display: 'inline-block' }}>\r\n        <svg \r\n          ref={svgRef} \r\n          style={{ cursor: isDragging ? 'grabbing' : 'grab' }}\r\n          onMouseDown={handleMouseDown}\r\n        />\r\n        \r\n        {/* Canvas渲染PM2.5网格 */}\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1000}\r\n          height={500}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            pointerEvents: 'none',\r\n            zIndex: 1\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{marginTop: 8, color: '#888'}}>\r\n        拖拽平移，滚轮缩放，点击按钮控制 - 缩放比例: {transform.k.toFixed(2)}x\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}