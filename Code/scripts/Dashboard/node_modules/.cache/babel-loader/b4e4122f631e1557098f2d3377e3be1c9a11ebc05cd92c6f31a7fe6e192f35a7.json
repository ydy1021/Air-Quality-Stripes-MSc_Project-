{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard_ComparisionVersion\\\\src\\\\MultiTrendCharts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PM25_CSV = 'V1pt6_Cities_Data_PM2pt5.csv';\nfunction SingleTrend({\n  city,\n  country,\n  data,\n  years\n}) {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data || !city || !country) return;\n    const width = 350,\n      height = 250,\n      margin = {\n        top: 40,\n        right: 20,\n        bottom: 40,\n        left: 50\n      };\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll('*').remove();\n    const col = `${city}, ${country}`;\n    const y = data.map(row => +row[col]);\n    const x = d3.scaleLinear().domain(d3.extent(years)).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(y) * 1.1]).range([height - margin.bottom, margin.top]);\n    const line = d3.line().x((d, i) => x(years[i])).y(d => yScale(d));\n    svg.append('path').datum(y).attr('fill', 'none').attr('stroke', '#1976d2').attr('stroke-width', 2.5).attr('d', line);\n    svg.selectAll('.dot').data(y).enter().append('circle').attr('class', 'dot').attr('cx', (d, i) => x(years[i])).attr('cy', d => yScale(d)).attr('r', 2.5).attr('fill', '#1976d2');\n    svg.append('g').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickFormat(d3.format('d')));\n    svg.append('g').attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(yScale));\n    svg.append('text').attr('x', width / 2).attr('y', margin.top / 2).attr('text-anchor', 'middle').attr('font-size', 15).attr('font-weight', 'bold').text(`${city}, ${country} PM2.5 Trend`);\n  }, [data, years, city, country]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n_s(SingleTrend, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = SingleTrend;\nfunction MultiTrendCharts({\n  selectedCities\n}) {\n  _s2();\n  const [data, setData] = useState(null);\n  const [years, setYears] = useState([]);\n  useEffect(() => {\n    d3.csv(PM25_CSV).then(raw => {\n      setYears(raw.map(row => +row['Year']));\n      setData(raw);\n    });\n  }, []);\n  if (!selectedCities.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      margin: 32,\n      color: '#888'\n    },\n    children: \"\\u8BF7\\u9009\\u62E9\\u57CE\\u5E02\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 38\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      gap: 24\n    },\n    children: selectedCities.slice(0, 3).map((c, idx) => /*#__PURE__*/_jsxDEV(SingleTrend, {\n      city: c.city,\n      country: c.country,\n      data: data,\n      years: years\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s2(MultiTrendCharts, \"6Lm808ceAl8sDcnxN80vNa7swjA=\");\n_c2 = MultiTrendCharts;\nexport default MultiTrendCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"SingleTrend\");\n$RefreshReg$(_c2, \"MultiTrendCharts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","PM25_CSV","SingleTrend","city","country","data","years","_s","svgRef","width","height","margin","top","right","bottom","left","svg","select","current","attr","selectAll","remove","col","y","map","row","x","scaleLinear","domain","extent","range","yScale","max","line","d","i","append","datum","enter","call","axisBottom","tickFormat","format","axisLeft","text","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","MultiTrendCharts","selectedCities","_s2","setData","setYears","csv","then","raw","length","style","textAlign","color","children","display","justifyContent","gap","slice","c","idx","_c2","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard_ComparisionVersion/src/MultiTrendCharts.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst PM25_CSV = 'V1pt6_Cities_Data_PM2pt5.csv';\r\n\r\nfunction SingleTrend({ city, country, data, years }) {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!data || !city || !country) return;\r\n    const width = 350, height = 250, margin = {top: 40, right: 20, bottom: 40, left: 50};\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width)\r\n      .attr('height', height);\r\n    svg.selectAll('*').remove();\r\n\r\n    const col = `${city}, ${country}`;\r\n    const y = data.map(row => +row[col]);\r\n\r\n    const x = d3.scaleLinear().domain(d3.extent(years)).range([margin.left, width - margin.right]);\r\n    const yScale = d3.scaleLinear().domain([0, d3.max(y) * 1.1]).range([height - margin.bottom, margin.top]);\r\n\r\n    const line = d3.line()\r\n      .x((d, i) => x(years[i]))\r\n      .y(d => yScale(d));\r\n\r\n    svg.append('path')\r\n      .datum(y)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#1976d2')\r\n      .attr('stroke-width', 2.5)\r\n      .attr('d', line);\r\n\r\n    svg.selectAll('.dot')\r\n      .data(y)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', (d, i) => x(years[i]))\r\n      .attr('cy', d => yScale(d))\r\n      .attr('r', 2.5)\r\n      .attr('fill', '#1976d2');\r\n\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height - margin.bottom})`)\r\n      .call(d3.axisBottom(x).tickFormat(d3.format('d')));\r\n    svg.append('g')\r\n      .attr('transform', `translate(${margin.left},0)`)\r\n      .call(d3.axisLeft(yScale));\r\n\r\n    svg.append('text')\r\n      .attr('x', width / 2)\r\n      .attr('y', margin.top / 2)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('font-size', 15)\r\n      .attr('font-weight', 'bold')\r\n      .text(`${city}, ${country} PM2.5 Trend`);\r\n  }, [data, years, city, country]);\r\n\r\n  return <svg ref={svgRef}></svg>;\r\n}\r\n\r\nfunction MultiTrendCharts({ selectedCities }) {\r\n  const [data, setData] = useState(null);\r\n  const [years, setYears] = useState([]);\r\n\r\n  useEffect(() => {\r\n    d3.csv(PM25_CSV).then(raw => {\r\n      setYears(raw.map(row => +row['Year']));\r\n      setData(raw);\r\n    });\r\n  }, []);\r\n\r\n  if (!selectedCities.length) return <div style={{textAlign: 'center', margin: 32, color: '#888'}}>请选择城市</div>;\r\n\r\n  return (\r\n    <div style={{display: 'flex', justifyContent: 'center', gap: 24}}>\r\n      {selectedCities.slice(0, 3).map((c, idx) =>\r\n        <SingleTrend key={idx} city={c.city} country={c.country} data={data} years={years} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiTrendCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}