{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard_ComparisionVersion\\\\src\\\\NativeZoomMapWithPM25.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport PM25DataLoader from './PM25DataLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\nconst CITIES_JSON = 'cities_with_coords.json';\n\n// PM2.5色阶区间和颜色，与MultiTrendCharts.js保持一致\nconst bounds = [0, 5, 10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 99999];\nconst c_list = ['rgb(164,255,255)',\n// 0 - 5\n'rgb(176,218,233)',\n// 5 - 10\n'rgb(176,206,237)',\n// 10 - 15\n'rgb(249,224,71)',\n// 15 - 20\n'rgb(242,200,75)',\n// 20 - 30\n'rgb(241,166,63)',\n// 30 - 40\n'rgb(233,135,37)',\n// 40 - 50\n'rgb(175,69,83)',\n// 50 - 60\n'rgb(134,59,71)',\n// 60 - 70\n'rgb(103,58,61)',\n// 70 - 80\n'rgb(70,47,48)',\n// 80 - 90\n'rgb(37,36,36)' // 90+\n];\nfunction getColor(val) {\n  if (val === null || val === undefined || isNaN(val)) return '#e0e0e0';\n  for (let i = 0; i < bounds.length - 1; ++i) {\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\n  }\n  return c_list[c_list.length - 1];\n}\n\n// 将RGB字符串转换为RGB数组\nfunction parseRGB(rgbString) {\n  const match = rgbString.match(/rgb\\((\\d+),(\\d+),(\\d+)\\)/);\n  if (match) {\n    return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n  }\n  return [224, 224, 224]; // 默认灰色\n}\nfunction NativeZoomMapWithPM25({\n  onCitySelect,\n  selectedCities\n}) {\n  _s();\n  const svgRef = useRef();\n  const canvasRef = useRef();\n  const [cities, setCities] = useState([]);\n  const [world, setWorld] = useState(null);\n  const [pm25Loader, setPm25Loader] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [transform, setTransform] = useState({\n    k: 1,\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMouse, setLastMouse] = useState({\n    x: 0,\n    y: 0\n  });\n  const [projection, setProjection] = useState(null);\n\n  // 获取地理位置的PM2.5值\n  const getPM25ForLocation = useCallback((lat, lon) => {\n    if (!pm25Loader) return null;\n    return pm25Loader.getPM25Value(lat, lon);\n  }, [pm25Loader]);\n\n  // 加载数据\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        const [worldData, citiesData] = await Promise.all([d3.json(WORLD_GEOJSON_URL), d3.json(CITIES_JSON)]);\n        if (worldData && worldData.features) {\n          setWorld(worldData);\n        }\n        if (citiesData && Array.isArray(citiesData)) {\n          setCities(citiesData);\n        }\n\n        // 加载PM2.5数据\n        const loader = new PM25DataLoader();\n        const success = await loader.loadData();\n        if (success) {\n          setPm25Loader(loader);\n          console.log('PM2.5 data stats:', loader.getDataStats());\n        } else {\n          console.warn('PM2.5 data loading failed, using default colors');\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // 缩放控制函数\n  const handleZoomIn = () => {\n    setTransform(prev => ({\n      ...prev,\n      k: Math.min(prev.k * 1.5, 8)\n    }));\n  };\n  const handleZoomOut = () => {\n    setTransform(prev => ({\n      ...prev,\n      k: Math.max(prev.k / 1.5, 0.5)\n    }));\n  };\n  const handleReset = () => {\n    setTransform({\n      k: 1,\n      x: 0,\n      y: 0\n    });\n  };\n\n  // 鼠标事件处理\n  const handleMouseDown = event => {\n    setIsDragging(true);\n    setLastMouse({\n      x: event.clientX,\n      y: event.clientY\n    });\n    event.preventDefault();\n  };\n  const handleMouseMove = event => {\n    if (!isDragging) return;\n    const deltaX = event.clientX - lastMouse.x;\n    const deltaY = event.clientY - lastMouse.y;\n    setTransform(prev => ({\n      ...prev,\n      x: prev.x + deltaX,\n      y: prev.y + deltaY\n    }));\n    setLastMouse({\n      x: event.clientX,\n      y: event.clientY\n    });\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleWheel = useCallback(event => {\n    event.preventDefault();\n    const rect = svgRef.current.getBoundingClientRect();\n    const mouseX = event.clientX - rect.left;\n    const mouseY = event.clientY - rect.top;\n    const scale = event.deltaY > 0 ? 0.9 : 1.1;\n    const newK = Math.min(Math.max(transform.k * scale, 0.5), 8);\n    if (newK !== transform.k) {\n      const factor = newK / transform.k;\n      setTransform(prev => ({\n        k: newK,\n        x: mouseX - factor * (mouseX - prev.x),\n        y: mouseY - factor * (mouseY - prev.y)\n      }));\n    }\n  }, [transform]);\n\n  // 渲染Canvas PM2.5数据\n  const renderPM25Canvas = useCallback(() => {\n    if (!pm25Loader || !pm25Loader.data || !projection || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const width = 1000,\n      height = 500;\n\n    // 清空画布\n    ctx.clearRect(0, 0, width, height);\n    const gridData = pm25Loader.data.data;\n    let renderedCount = 0;\n\n    // 创建城市点位置集合，用于避让\n    const cityPositions = cities.map(city => {\n      const projected = projection([city.lng, city.lat]);\n      if (!projected) return null;\n\n      // 应用缩放变换\n      const transformedX = projected[0] * transform.k + transform.x;\n      const transformedY = projected[1] * transform.k + transform.y;\n      return {\n        x: transformedX,\n        y: transformedY\n      };\n    }).filter(pos => pos !== null);\n\n    // 创建ImageData对象用于批量像素操作\n    const imageData = ctx.createImageData(width, height);\n    const data = imageData.data;\n\n    // 网格大小（根据缩放级别调整）\n    const baseGridSize = 2;\n    const gridSize = Math.max(1, Math.round(baseGridSize * transform.k));\n    const cityAvoidRadius = 8; // 城市点周围的避让半径\n\n    // 渲染每个网格点\n    for (const point of gridData) {\n      const projected = projection([point.lon, point.lat]);\n      if (!projected) continue;\n\n      // 应用缩放变换\n      const transformedX = projected[0] * transform.k + transform.x;\n      const transformedY = projected[1] * transform.k + transform.y;\n\n      // 视口裁剪\n      if (transformedX < -gridSize || transformedX >= width + gridSize || transformedY < -gridSize || transformedY >= height + gridSize) continue;\n\n      // 检查是否与城市点冲突\n      const tooCloseToCity = cityPositions.some(cityPos => {\n        const distance = Math.sqrt(Math.pow(transformedX - cityPos.x, 2) + Math.pow(transformedY - cityPos.y, 2));\n        return distance < cityAvoidRadius;\n      });\n      if (tooCloseToCity) continue; // 跳过城市点附近的网格\n\n      // 获取颜色\n      const color = getColor(point.value);\n      const [r, g, b] = parseRGB(color);\n\n      // 增强颜色饱和度\n      const enhancedR = Math.min(255, Math.round(r * 1.1));\n      const enhancedG = Math.min(255, Math.round(g * 1.1));\n      const enhancedB = Math.min(255, Math.round(b * 1.1));\n\n      // 绘制网格点（小矩形）\n      const startX = Math.max(0, Math.floor(transformedX - gridSize / 2));\n      const endX = Math.min(width - 1, Math.floor(transformedX + gridSize / 2));\n      const startY = Math.max(0, Math.floor(transformedY - gridSize / 2));\n      const endY = Math.min(height - 1, Math.floor(transformedY + gridSize / 2));\n      for (let px = startX; px <= endX; px++) {\n        for (let py = startY; py <= endY; py++) {\n          const index = (py * width + px) * 4;\n          data[index] = enhancedR; // Red\n          data[index + 1] = enhancedG; // Green\n          data[index + 2] = enhancedB; // Blue\n          data[index + 3] = 180; // Alpha\n        }\n      }\n      renderedCount++;\n    }\n\n    // 将ImageData绘制到canvas\n    ctx.putImageData(imageData, 0, 0);\n    console.log(`Canvas rendered ${renderedCount} grid points at scale ${transform.k.toFixed(2)}`);\n  }, [pm25Loader, projection, cities, transform]);\n\n  // 绘制地图\n  useEffect(() => {\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current) return;\n    try {\n      const width = 1000,\n        height = 500;\n      const svg = d3.select(svgRef.current);\n\n      // 清除之前的内容\n      svg.selectAll('*').remove();\n\n      // 设置SVG尺寸\n      svg.attr('width', width).attr('height', height);\n\n      // 投影\n      const mapProjection = d3.geoNaturalEarth1().fitSize([width, height], world);\n      const path = d3.geoPath().projection(mapProjection);\n      setProjection(mapProjection);\n\n      // 创建主要的g元素用于缩放变换\n      const g = svg.append('g').attr('class', 'map-group');\n\n      // 首先绘制基础地图（作为背景）\n      g.append('g').attr('class', 'countries-background').selectAll('path').data(world.features).enter().append('path').attr('d', path).attr('fill', '#f0f0f0').attr('stroke', '#ccc').attr('stroke-width', 0.5);\n\n      // 重新绘制国家边界（在网格之上）\n      g.append('g').attr('class', 'countries-borders').selectAll('path').data(world.features).enter().append('path').attr('d', path).attr('fill', 'none').attr('stroke', '#666').attr('stroke-width', 0.8).style('pointer-events', 'all').append('title').text(d => {\n        if (!d || !d.properties) return 'Unknown';\n        const countryName = d.properties.NAME || d.properties.name || 'Unknown';\n        try {\n          const centroid = d3.geoCentroid(d);\n          if (centroid && centroid.length >= 2) {\n            const [lon, lat] = centroid;\n            const pm25Value = getPM25ForLocation(lat, lon);\n            return pm25Value !== null ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${countryName}`;\n          }\n        } catch (error) {\n          console.warn('Error calculating centroid for country:', countryName, error);\n        }\n        return countryName;\n      });\n\n      // 绘制城市点 - 只绘制有效的投影\n      const citiesGroup = g.append('g').attr('class', 'cities');\n      cities.forEach(city => {\n        const projected = mapProjection([city.lng, city.lat]);\n        if (projected) {\n          citiesGroup.append('circle').attr('cx', projected[0]).attr('cy', projected[1]).attr('r', 5).attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2').attr('stroke', '#fff').attr('stroke-width', 3).style('cursor', 'pointer').style('filter', 'drop-shadow(0px 2px 4px rgba(0,0,0,0.3))').on('click', () => {\n            if (onCitySelect) onCitySelect(city);\n          }).append('title').text(() => {\n            const pm25Value = getPM25ForLocation(city.lat, city.lng);\n            return pm25Value !== null ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${city.city}, ${city.country}\\nPM2.5: No data`;\n          });\n        }\n      });\n\n      // 应用变换\n      g.attr('transform', `translate(${transform.x}, ${transform.y}) scale(${transform.k})`);\n\n      // 调整元素大小\n      if (transform.k > 0) {\n        citiesGroup.selectAll('circle').attr('r', 5 / transform.k).attr('stroke-width', 3 / transform.k);\n        g.selectAll('.countries-borders path').attr('stroke-width', 0.8 / transform.k);\n        g.selectAll('.countries-background path').attr('stroke-width', 0.5 / transform.k);\n      }\n\n      // 添加色阶图例（固定位置，不受缩放影响）\n      if (pm25Loader) {\n        const legendWidth = 300;\n        const legendHeight = 20;\n        const legendX = width - legendWidth - 20;\n        const legendY = height - 60;\n        const legendGroup = svg.append('g').attr('class', 'legend');\n\n        // 图例背景\n        legendGroup.append('rect').attr('x', legendX - 10).attr('y', legendY - 25).attr('width', legendWidth + 20).attr('height', 50).attr('fill', 'white').attr('stroke', '#ccc').attr('rx', 5);\n\n        // 色阶条\n        const legendScale = d3.scaleLinear().domain([0, bounds.length - 2]).range([0, legendWidth]);\n        legendGroup.append('g').selectAll('rect').data(c_list.slice(0, -1)).enter().append('rect').attr('x', (d, i) => legendX + legendScale(i)).attr('y', legendY).attr('width', legendWidth / (c_list.length - 1)).attr('height', legendHeight).attr('fill', d => d);\n\n        // 图例标题\n        legendGroup.append('text').attr('x', legendX).attr('y', legendY - 5).attr('font-size', 12).attr('font-weight', 'bold').text('PM2.5 Concentration (µg/m³) - 2022');\n\n        // 数值标签\n        const labelValues = [0, 10, 20, 30, 50, 70, 90];\n        legendGroup.append('g').selectAll('text').data(labelValues).enter().append('text').attr('x', d => {\n          const index = bounds.findIndex(b => b >= d);\n          return legendX + legendScale(Math.max(0, index));\n        }).attr('y', legendY + legendHeight + 15).attr('text-anchor', 'middle').attr('font-size', 10).text(d => d);\n      }\n    } catch (error) {\n      console.error('Error rendering native zoom map with PM2.5:', error);\n    }\n  }, [world, cities, selectedCities, onCitySelect, isLoading, transform, pm25Loader, getPM25ForLocation]);\n\n  // 渲染Canvas层\n  useEffect(() => {\n    renderPM25Canvas();\n  }, [renderPM25Canvas]);\n\n  // 添加全局鼠标事件监听器\n  useEffect(() => {\n    const handleGlobalMouseMove = event => handleMouseMove(event);\n    const handleGlobalMouseUp = () => handleMouseUp();\n    if (isDragging) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n    };\n  }, [isDragging, lastMouse]);\n\n  // 添加wheel事件监听器\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    svg.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => {\n      svg.removeEventListener('wheel', handleWheel);\n    };\n  }, [handleWheel]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: 20,\n        color: '#666'\n      },\n      children: \"Loading PM2.5 data and map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          zIndex: 10,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomIn,\n          style: buttonStyle,\n          title: \"\\u653E\\u5927\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomOut,\n          style: buttonStyle,\n          title: \"\\u7F29\\u5C0F\",\n          children: \"\\u2212\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReset,\n          style: buttonStyle,\n          title: \"\\u91CD\\u7F6E\",\n          children: \"\\u2302\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          cursor: isDragging ? 'grabbing' : 'grab'\n        },\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1000,\n        height: 500,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          // 让鼠标事件穿透到下层SVG\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        color: '#888'\n      },\n      children: pm25Loader ? `完整原生缩放地图 - 拖拽平移，滚轮缩放，缩放比例: ${transform.k.toFixed(2)}x` : '* Loading PM2.5 data for map coloring...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n}\n_s(NativeZoomMapWithPM25, \"bUtdRSHKObLXn8URx8bwLenFA5w=\");\n_c = NativeZoomMapWithPM25;\nconst buttonStyle = {\n  width: 30,\n  height: 30,\n  border: '1px solid #ccc',\n  backgroundColor: 'white',\n  borderRadius: '3px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n};\nexport default NativeZoomMapWithPM25;\nvar _c;\n$RefreshReg$(_c, \"NativeZoomMapWithPM25\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","d3","PM25DataLoader","jsxDEV","_jsxDEV","WORLD_GEOJSON_URL","CITIES_JSON","bounds","c_list","getColor","val","undefined","isNaN","i","length","parseRGB","rgbString","match","parseInt","NativeZoomMapWithPM25","onCitySelect","selectedCities","_s","svgRef","canvasRef","cities","setCities","world","setWorld","pm25Loader","setPm25Loader","isLoading","setIsLoading","transform","setTransform","k","x","y","isDragging","setIsDragging","lastMouse","setLastMouse","projection","setProjection","getPM25ForLocation","lat","lon","getPM25Value","loadData","worldData","citiesData","Promise","all","json","features","Array","isArray","loader","success","console","log","getDataStats","warn","error","handleZoomIn","prev","Math","min","handleZoomOut","max","handleReset","handleMouseDown","event","clientX","clientY","preventDefault","handleMouseMove","deltaX","deltaY","handleMouseUp","handleWheel","rect","current","getBoundingClientRect","mouseX","left","mouseY","top","scale","newK","factor","renderPM25Canvas","data","canvas","ctx","getContext","width","height","clearRect","gridData","renderedCount","cityPositions","map","city","projected","lng","transformedX","transformedY","filter","pos","imageData","createImageData","baseGridSize","gridSize","round","cityAvoidRadius","point","tooCloseToCity","some","cityPos","distance","sqrt","pow","color","value","r","g","b","enhancedR","enhancedG","enhancedB","startX","floor","endX","startY","endY","px","py","index","putImageData","toFixed","svg","select","selectAll","remove","attr","mapProjection","geoNaturalEarth1","fitSize","path","geoPath","append","enter","style","text","d","properties","countryName","NAME","name","centroid","geoCentroid","pm25Value","citiesGroup","forEach","find","c","country","on","legendWidth","legendHeight","legendX","legendY","legendGroup","legendScale","scaleLinear","domain","range","slice","labelValues","findIndex","handleGlobalMouseMove","handleGlobalMouseUp","document","addEventListener","removeEventListener","passive","textAlign","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","position","display","zIndex","flexDirection","gap","onClick","buttonStyle","title","ref","cursor","onMouseDown","pointerEvents","marginTop","_c","border","backgroundColor","borderRadius","fontSize","fontWeight","alignItems","justifyContent","boxShadow","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard_ComparisionVersion/src/NativeZoomMapWithPM25.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport * as d3 from 'd3';\r\nimport PM25DataLoader from './PM25DataLoader';\r\n\r\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\r\nconst CITIES_JSON = 'cities_with_coords.json';\r\n\r\n// PM2.5色阶区间和颜色，与MultiTrendCharts.js保持一致\r\nconst bounds = [0, 5, 10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 99999];\r\nconst c_list = [\r\n  'rgb(164,255,255)',  // 0 - 5\r\n  'rgb(176,218,233)',  // 5 - 10\r\n  'rgb(176,206,237)',  // 10 - 15\r\n  'rgb(249,224,71)',   // 15 - 20\r\n  'rgb(242,200,75)',   // 20 - 30\r\n  'rgb(241,166,63)',   // 30 - 40\r\n  'rgb(233,135,37)',   // 40 - 50\r\n  'rgb(175,69,83)',    // 50 - 60\r\n  'rgb(134,59,71)',    // 60 - 70\r\n  'rgb(103,58,61)',    // 70 - 80\r\n  'rgb(70,47,48)',     // 80 - 90\r\n  'rgb(37,36,36)',     // 90+\r\n];\r\n\r\nfunction getColor(val) {\r\n  if (val === null || val === undefined || isNaN(val)) return '#e0e0e0';\r\n  for (let i = 0; i < bounds.length - 1; ++i) {\r\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\r\n  }\r\n  return c_list[c_list.length - 1];\r\n}\r\n\r\n// 将RGB字符串转换为RGB数组\r\nfunction parseRGB(rgbString) {\r\n  const match = rgbString.match(/rgb\\((\\d+),(\\d+),(\\d+)\\)/);\r\n  if (match) {\r\n    return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\r\n  }\r\n  return [224, 224, 224]; // 默认灰色\r\n}\r\n\r\nfunction NativeZoomMapWithPM25({ onCitySelect, selectedCities }) {\r\n  const svgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const [cities, setCities] = useState([]);\r\n  const [world, setWorld] = useState(null);\r\n  const [pm25Loader, setPm25Loader] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [transform, setTransform] = useState({ k: 1, x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [lastMouse, setLastMouse] = useState({ x: 0, y: 0 });\r\n  const [projection, setProjection] = useState(null);\r\n\r\n  // 获取地理位置的PM2.5值\r\n  const getPM25ForLocation = useCallback((lat, lon) => {\r\n    if (!pm25Loader) return null;\r\n    return pm25Loader.getPM25Value(lat, lon);\r\n  }, [pm25Loader]);\r\n\r\n  // 加载数据\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const [worldData, citiesData] = await Promise.all([\r\n          d3.json(WORLD_GEOJSON_URL),\r\n          d3.json(CITIES_JSON)\r\n        ]);\r\n        \r\n        if (worldData && worldData.features) {\r\n          setWorld(worldData);\r\n        }\r\n        if (citiesData && Array.isArray(citiesData)) {\r\n          setCities(citiesData);\r\n        }\r\n\r\n        // 加载PM2.5数据\r\n        const loader = new PM25DataLoader();\r\n        const success = await loader.loadData();\r\n        if (success) {\r\n          setPm25Loader(loader);\r\n          console.log('PM2.5 data stats:', loader.getDataStats());\r\n        } else {\r\n          console.warn('PM2.5 data loading failed, using default colors');\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // 缩放控制函数\r\n  const handleZoomIn = () => {\r\n    setTransform(prev => ({\r\n      ...prev,\r\n      k: Math.min(prev.k * 1.5, 8)\r\n    }));\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setTransform(prev => ({\r\n      ...prev,\r\n      k: Math.max(prev.k / 1.5, 0.5)\r\n    }));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTransform({ k: 1, x: 0, y: 0 });\r\n  };\r\n\r\n  // 鼠标事件处理\r\n  const handleMouseDown = (event) => {\r\n    setIsDragging(true);\r\n    setLastMouse({ x: event.clientX, y: event.clientY });\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    if (!isDragging) return;\r\n    \r\n    const deltaX = event.clientX - lastMouse.x;\r\n    const deltaY = event.clientY - lastMouse.y;\r\n    \r\n    setTransform(prev => ({\r\n      ...prev,\r\n      x: prev.x + deltaX,\r\n      y: prev.y + deltaY\r\n    }));\r\n    \r\n    setLastMouse({ x: event.clientX, y: event.clientY });\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleWheel = useCallback((event) => {\r\n    event.preventDefault();\r\n    const rect = svgRef.current.getBoundingClientRect();\r\n    const mouseX = event.clientX - rect.left;\r\n    const mouseY = event.clientY - rect.top;\r\n    \r\n    const scale = event.deltaY > 0 ? 0.9 : 1.1;\r\n    const newK = Math.min(Math.max(transform.k * scale, 0.5), 8);\r\n    \r\n    if (newK !== transform.k) {\r\n      const factor = newK / transform.k;\r\n      setTransform(prev => ({\r\n        k: newK,\r\n        x: mouseX - factor * (mouseX - prev.x),\r\n        y: mouseY - factor * (mouseY - prev.y)\r\n      }));\r\n    }\r\n  }, [transform]);\r\n\r\n  // 渲染Canvas PM2.5数据\r\n  const renderPM25Canvas = useCallback(() => {\r\n    if (!pm25Loader || !pm25Loader.data || !projection || !canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const width = 1000, height = 500;\r\n    \r\n    // 清空画布\r\n    ctx.clearRect(0, 0, width, height);\r\n    \r\n    const gridData = pm25Loader.data.data;\r\n    let renderedCount = 0;\r\n    \r\n    // 创建城市点位置集合，用于避让\r\n    const cityPositions = cities.map(city => {\r\n      const projected = projection([city.lng, city.lat]);\r\n      if (!projected) return null;\r\n      \r\n      // 应用缩放变换\r\n      const transformedX = projected[0] * transform.k + transform.x;\r\n      const transformedY = projected[1] * transform.k + transform.y;\r\n      \r\n      return { x: transformedX, y: transformedY };\r\n    }).filter(pos => pos !== null);\r\n    \r\n    // 创建ImageData对象用于批量像素操作\r\n    const imageData = ctx.createImageData(width, height);\r\n    const data = imageData.data;\r\n    \r\n    // 网格大小（根据缩放级别调整）\r\n    const baseGridSize = 2;\r\n    const gridSize = Math.max(1, Math.round(baseGridSize * transform.k));\r\n    const cityAvoidRadius = 8; // 城市点周围的避让半径\r\n    \r\n    // 渲染每个网格点\r\n    for (const point of gridData) {\r\n      const projected = projection([point.lon, point.lat]);\r\n      if (!projected) continue;\r\n      \r\n      // 应用缩放变换\r\n      const transformedX = projected[0] * transform.k + transform.x;\r\n      const transformedY = projected[1] * transform.k + transform.y;\r\n      \r\n      // 视口裁剪\r\n      if (transformedX < -gridSize || transformedX >= width + gridSize || \r\n          transformedY < -gridSize || transformedY >= height + gridSize) continue;\r\n      \r\n      // 检查是否与城市点冲突\r\n      const tooCloseToCity = cityPositions.some(cityPos => {\r\n        const distance = Math.sqrt(\r\n          Math.pow(transformedX - cityPos.x, 2) + \r\n          Math.pow(transformedY - cityPos.y, 2)\r\n        );\r\n        return distance < cityAvoidRadius;\r\n      });\r\n      \r\n      if (tooCloseToCity) continue; // 跳过城市点附近的网格\r\n      \r\n      // 获取颜色\r\n      const color = getColor(point.value);\r\n      const [r, g, b] = parseRGB(color);\r\n      \r\n      // 增强颜色饱和度\r\n      const enhancedR = Math.min(255, Math.round(r * 1.1));\r\n      const enhancedG = Math.min(255, Math.round(g * 1.1));\r\n      const enhancedB = Math.min(255, Math.round(b * 1.1));\r\n      \r\n      // 绘制网格点（小矩形）\r\n      const startX = Math.max(0, Math.floor(transformedX - gridSize/2));\r\n      const endX = Math.min(width - 1, Math.floor(transformedX + gridSize/2));\r\n      const startY = Math.max(0, Math.floor(transformedY - gridSize/2));\r\n      const endY = Math.min(height - 1, Math.floor(transformedY + gridSize/2));\r\n      \r\n      for (let px = startX; px <= endX; px++) {\r\n        for (let py = startY; py <= endY; py++) {\r\n          const index = (py * width + px) * 4;\r\n          data[index] = enhancedR;     // Red\r\n          data[index + 1] = enhancedG; // Green\r\n          data[index + 2] = enhancedB; // Blue\r\n          data[index + 3] = 180; // Alpha\r\n        }\r\n      }\r\n      \r\n      renderedCount++;\r\n    }\r\n    \r\n    // 将ImageData绘制到canvas\r\n    ctx.putImageData(imageData, 0, 0);\r\n    \r\n    console.log(`Canvas rendered ${renderedCount} grid points at scale ${transform.k.toFixed(2)}`);\r\n  }, [pm25Loader, projection, cities, transform]);\r\n\r\n  // 绘制地图\r\n  useEffect(() => {\r\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current) return;\r\n    \r\n    try {\r\n      const width = 1000, height = 500;\r\n      const svg = d3.select(svgRef.current);\r\n      \r\n      // 清除之前的内容\r\n      svg.selectAll('*').remove();\r\n      \r\n      // 设置SVG尺寸\r\n      svg.attr('width', width).attr('height', height);\r\n\r\n      // 投影\r\n      const mapProjection = d3.geoNaturalEarth1().fitSize([width, height], world);\r\n      const path = d3.geoPath().projection(mapProjection);\r\n      setProjection(mapProjection);\r\n\r\n      // 创建主要的g元素用于缩放变换\r\n      const g = svg.append('g').attr('class', 'map-group');\r\n\r\n      // 首先绘制基础地图（作为背景）\r\n      g.append('g')\r\n        .attr('class', 'countries-background')\r\n        .selectAll('path')\r\n        .data(world.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('d', path)\r\n        .attr('fill', '#f0f0f0')\r\n        .attr('stroke', '#ccc')\r\n        .attr('stroke-width', 0.5);\r\n\r\n      // 重新绘制国家边界（在网格之上）\r\n      g.append('g')\r\n        .attr('class', 'countries-borders')\r\n        .selectAll('path')\r\n        .data(world.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('d', path)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#666')\r\n        .attr('stroke-width', 0.8)\r\n        .style('pointer-events', 'all')\r\n        .append('title')\r\n        .text(d => {\r\n          if (!d || !d.properties) return 'Unknown';\r\n          const countryName = d.properties.NAME || d.properties.name || 'Unknown';\r\n          try {\r\n            const centroid = d3.geoCentroid(d);\r\n            if (centroid && centroid.length >= 2) {\r\n              const [lon, lat] = centroid;\r\n              const pm25Value = getPM25ForLocation(lat, lon);\r\n              return pm25Value !== null \r\n                ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                : `${countryName}`;\r\n            }\r\n          } catch (error) {\r\n            console.warn('Error calculating centroid for country:', countryName, error);\r\n          }\r\n          return countryName;\r\n        });\r\n\r\n      // 绘制城市点 - 只绘制有效的投影\r\n      const citiesGroup = g.append('g').attr('class', 'cities');\r\n      \r\n      cities.forEach(city => {\r\n        const projected = mapProjection([city.lng, city.lat]);\r\n        if (projected) {\r\n          citiesGroup.append('circle')\r\n            .attr('cx', projected[0])\r\n            .attr('cy', projected[1])\r\n            .attr('r', 5)\r\n            .attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2')\r\n            .attr('stroke', '#fff')\r\n            .attr('stroke-width', 3)\r\n            .style('cursor', 'pointer')\r\n            .style('filter', 'drop-shadow(0px 2px 4px rgba(0,0,0,0.3))')\r\n            .on('click', () => {\r\n              if (onCitySelect) onCitySelect(city);\r\n            })\r\n            .append('title')\r\n            .text(() => {\r\n              const pm25Value = getPM25ForLocation(city.lat, city.lng);\r\n              return pm25Value !== null \r\n                ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                : `${city.city}, ${city.country}\\nPM2.5: No data`;\r\n            });\r\n        }\r\n      });\r\n\r\n      // 应用变换\r\n      g.attr('transform', `translate(${transform.x}, ${transform.y}) scale(${transform.k})`);\r\n      \r\n      // 调整元素大小\r\n      if (transform.k > 0) {\r\n        citiesGroup.selectAll('circle')\r\n          .attr('r', 5 / transform.k)\r\n          .attr('stroke-width', 3 / transform.k);\r\n        \r\n        g.selectAll('.countries-borders path')\r\n          .attr('stroke-width', 0.8 / transform.k);\r\n        g.selectAll('.countries-background path')\r\n          .attr('stroke-width', 0.5 / transform.k);\r\n      }\r\n\r\n      // 添加色阶图例（固定位置，不受缩放影响）\r\n      if (pm25Loader) {\r\n        const legendWidth = 300;\r\n        const legendHeight = 20;\r\n        const legendX = width - legendWidth - 20;\r\n        const legendY = height - 60;\r\n\r\n        const legendGroup = svg.append('g').attr('class', 'legend');\r\n\r\n        // 图例背景\r\n        legendGroup.append('rect')\r\n          .attr('x', legendX - 10)\r\n          .attr('y', legendY - 25)\r\n          .attr('width', legendWidth + 20)\r\n          .attr('height', 50)\r\n          .attr('fill', 'white')\r\n          .attr('stroke', '#ccc')\r\n          .attr('rx', 5);\r\n\r\n        // 色阶条\r\n        const legendScale = d3.scaleLinear()\r\n          .domain([0, bounds.length - 2])\r\n          .range([0, legendWidth]);\r\n\r\n        legendGroup.append('g')\r\n          .selectAll('rect')\r\n          .data(c_list.slice(0, -1))\r\n          .enter()\r\n          .append('rect')\r\n          .attr('x', (d, i) => legendX + legendScale(i))\r\n          .attr('y', legendY)\r\n          .attr('width', legendWidth / (c_list.length - 1))\r\n          .attr('height', legendHeight)\r\n          .attr('fill', d => d);\r\n\r\n        // 图例标题\r\n        legendGroup.append('text')\r\n          .attr('x', legendX)\r\n          .attr('y', legendY - 5)\r\n          .attr('font-size', 12)\r\n          .attr('font-weight', 'bold')\r\n          .text('PM2.5 Concentration (µg/m³) - 2022');\r\n\r\n        // 数值标签\r\n        const labelValues = [0, 10, 20, 30, 50, 70, 90];\r\n        legendGroup.append('g')\r\n          .selectAll('text')\r\n          .data(labelValues)\r\n          .enter()\r\n          .append('text')\r\n          .attr('x', d => {\r\n            const index = bounds.findIndex(b => b >= d);\r\n            return legendX + legendScale(Math.max(0, index));\r\n          })\r\n          .attr('y', legendY + legendHeight + 15)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('font-size', 10)\r\n          .text(d => d);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error rendering native zoom map with PM2.5:', error);\r\n    }\r\n  }, [world, cities, selectedCities, onCitySelect, isLoading, transform, pm25Loader, getPM25ForLocation]);\r\n\r\n  // 渲染Canvas层\r\n  useEffect(() => {\r\n    renderPM25Canvas();\r\n  }, [renderPM25Canvas]);\r\n\r\n  // 添加全局鼠标事件监听器\r\n  useEffect(() => {\r\n    const handleGlobalMouseMove = (event) => handleMouseMove(event);\r\n    const handleGlobalMouseUp = () => handleMouseUp();\r\n\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleGlobalMouseMove);\r\n      document.addEventListener('mouseup', handleGlobalMouseUp);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\r\n    };\r\n  }, [isDragging, lastMouse]);\r\n\r\n  // 添加wheel事件监听器\r\n  useEffect(() => {\r\n    const svg = svgRef.current;\r\n    if (!svg) return;\r\n\r\n    svg.addEventListener('wheel', handleWheel, { passive: false });\r\n\r\n    return () => {\r\n      svg.removeEventListener('wheel', handleWheel);\r\n    };\r\n  }, [handleWheel]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', margin: 20, color: '#666' }}>\r\n        Loading PM2.5 data and map...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div style={{ position: 'relative', display: 'inline-block' }}>\r\n        {/* 缩放控制按钮 */}\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: 10,\r\n          left: 10,\r\n          zIndex: 10,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          gap: '5px'\r\n        }}>\r\n          <button onClick={handleZoomIn} style={buttonStyle} title=\"放大\">+</button>\r\n          <button onClick={handleZoomOut} style={buttonStyle} title=\"缩小\">−</button>\r\n          <button onClick={handleReset} style={buttonStyle} title=\"重置\">⌂</button>\r\n        </div>\r\n        \r\n        <svg \r\n          ref={svgRef} \r\n          style={{ cursor: isDragging ? 'grabbing' : 'grab' }}\r\n          onMouseDown={handleMouseDown}\r\n        />\r\n        \r\n        {/* Canvas渲染PM2.5网格 */}\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1000}\r\n          height={500}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            pointerEvents: 'none', // 让鼠标事件穿透到下层SVG\r\n            zIndex: 1\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{marginTop: 8, color: '#888'}}>\r\n        {pm25Loader ? \r\n          `完整原生缩放地图 - 拖拽平移，滚轮缩放，缩放比例: ${transform.k.toFixed(2)}x` :\r\n          '* Loading PM2.5 data for map coloring...'\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst buttonStyle = {\r\n  width: 30,\r\n  height: 30,\r\n  border: '1px solid #ccc',\r\n  backgroundColor: 'white',\r\n  borderRadius: '3px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  fontWeight: 'bold',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n};\r\n\r\nexport default NativeZoomMapWithPM25; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,iBAAiB,GAAG,oBAAoB;AAC9C,MAAMC,WAAW,GAAG,yBAAyB;;AAE7C;AACA,MAAMC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC;AACpE,MAAMC,MAAM,GAAG,CACb,kBAAkB;AAAG;AACrB,kBAAkB;AAAG;AACrB,kBAAkB;AAAG;AACrB,iBAAiB;AAAI;AACrB,iBAAiB;AAAI;AACrB,iBAAiB;AAAI;AACrB,iBAAiB;AAAI;AACrB,gBAAgB;AAAK;AACrB,gBAAgB;AAAK;AACrB,gBAAgB;AAAK;AACrB,eAAe;AAAM;AACrB,eAAe,CAAM;AAAA,CACtB;AAED,SAASC,QAAQA,CAACC,GAAG,EAAE;EACrB,IAAIA,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKC,SAAS,IAAIC,KAAK,CAACF,GAAG,CAAC,EAAE,OAAO,SAAS;EACrE,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,GAAG,CAAC,EAAE,EAAED,CAAC,EAAE;IAC1C,IAAIH,GAAG,IAAIH,MAAM,CAACM,CAAC,CAAC,IAAIH,GAAG,GAAGH,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAOL,MAAM,CAACK,CAAC,CAAC;EAC/D;EACA,OAAOL,MAAM,CAACA,MAAM,CAACM,MAAM,GAAG,CAAC,CAAC;AAClC;;AAEA;AACA,SAASC,QAAQA,CAACC,SAAS,EAAE;EAC3B,MAAMC,KAAK,GAAGD,SAAS,CAACC,KAAK,CAAC,0BAA0B,CAAC;EACzD,IAAIA,KAAK,EAAE;IACT,OAAO,CAACC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE;EACA,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC1B;AAEA,SAASE,qBAAqBA,CAAC;EAAEC,YAAY;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAMC,MAAM,GAAGzB,MAAM,CAAC,CAAC;EACvB,MAAM0B,SAAS,GAAG1B,MAAM,CAAC,CAAC;EAC1B,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC;IAAEoC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAChE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC;IAAEqC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC1D,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAM6C,kBAAkB,GAAG5C,WAAW,CAAC,CAAC6C,GAAG,EAAEC,GAAG,KAAK;IACnD,IAAI,CAACjB,UAAU,EAAE,OAAO,IAAI;IAC5B,OAAOA,UAAU,CAACkB,YAAY,CAACF,GAAG,EAAEC,GAAG,CAAC;EAC1C,CAAC,EAAE,CAACjB,UAAU,CAAC,CAAC;;EAEhB;EACAhC,SAAS,CAAC,MAAM;IACd,MAAMmD,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACFhB,YAAY,CAAC,IAAI,CAAC;QAElB,MAAM,CAACiB,SAAS,EAAEC,UAAU,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChDnD,EAAE,CAACoD,IAAI,CAAChD,iBAAiB,CAAC,EAC1BJ,EAAE,CAACoD,IAAI,CAAC/C,WAAW,CAAC,CACrB,CAAC;QAEF,IAAI2C,SAAS,IAAIA,SAAS,CAACK,QAAQ,EAAE;UACnC1B,QAAQ,CAACqB,SAAS,CAAC;QACrB;QACA,IAAIC,UAAU,IAAIK,KAAK,CAACC,OAAO,CAACN,UAAU,CAAC,EAAE;UAC3CxB,SAAS,CAACwB,UAAU,CAAC;QACvB;;QAEA;QACA,MAAMO,MAAM,GAAG,IAAIvD,cAAc,CAAC,CAAC;QACnC,MAAMwD,OAAO,GAAG,MAAMD,MAAM,CAACT,QAAQ,CAAC,CAAC;QACvC,IAAIU,OAAO,EAAE;UACX5B,aAAa,CAAC2B,MAAM,CAAC;UACrBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAACI,YAAY,CAAC,CAAC,CAAC;QACzD,CAAC,MAAM;UACLF,OAAO,CAACG,IAAI,CAAC,iDAAiD,CAAC;QACjE;MAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,SAAS;QACR/B,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDgB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzB9B,YAAY,CAAC+B,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP9B,CAAC,EAAE+B,IAAI,CAACC,GAAG,CAACF,IAAI,CAAC9B,CAAC,GAAG,GAAG,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMiC,aAAa,GAAGA,CAAA,KAAM;IAC1BlC,YAAY,CAAC+B,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP9B,CAAC,EAAE+B,IAAI,CAACG,GAAG,CAACJ,IAAI,CAAC9B,CAAC,GAAG,GAAG,EAAE,GAAG;IAC/B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMmC,WAAW,GAAGA,CAAA,KAAM;IACxBpC,YAAY,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC;EACpC,CAAC;;EAED;EACA,MAAMkC,eAAe,GAAIC,KAAK,IAAK;IACjCjC,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAAC;MAAEL,CAAC,EAAEoC,KAAK,CAACC,OAAO;MAAEpC,CAAC,EAAEmC,KAAK,CAACE;IAAQ,CAAC,CAAC;IACpDF,KAAK,CAACG,cAAc,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,eAAe,GAAIJ,KAAK,IAAK;IACjC,IAAI,CAAClC,UAAU,EAAE;IAEjB,MAAMuC,MAAM,GAAGL,KAAK,CAACC,OAAO,GAAGjC,SAAS,CAACJ,CAAC;IAC1C,MAAM0C,MAAM,GAAGN,KAAK,CAACE,OAAO,GAAGlC,SAAS,CAACH,CAAC;IAE1CH,YAAY,CAAC+B,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP7B,CAAC,EAAE6B,IAAI,CAAC7B,CAAC,GAAGyC,MAAM;MAClBxC,CAAC,EAAE4B,IAAI,CAAC5B,CAAC,GAAGyC;IACd,CAAC,CAAC,CAAC;IAEHrC,YAAY,CAAC;MAAEL,CAAC,EAAEoC,KAAK,CAACC,OAAO;MAAEpC,CAAC,EAAEmC,KAAK,CAACE;IAAQ,CAAC,CAAC;EACtD,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1BxC,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMyC,WAAW,GAAGhF,WAAW,CAAEwE,KAAK,IAAK;IACzCA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtB,MAAMM,IAAI,GAAG1D,MAAM,CAAC2D,OAAO,CAACC,qBAAqB,CAAC,CAAC;IACnD,MAAMC,MAAM,GAAGZ,KAAK,CAACC,OAAO,GAAGQ,IAAI,CAACI,IAAI;IACxC,MAAMC,MAAM,GAAGd,KAAK,CAACE,OAAO,GAAGO,IAAI,CAACM,GAAG;IAEvC,MAAMC,KAAK,GAAGhB,KAAK,CAACM,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;IAC1C,MAAMW,IAAI,GAAGvB,IAAI,CAACC,GAAG,CAACD,IAAI,CAACG,GAAG,CAACpC,SAAS,CAACE,CAAC,GAAGqD,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;IAE5D,IAAIC,IAAI,KAAKxD,SAAS,CAACE,CAAC,EAAE;MACxB,MAAMuD,MAAM,GAAGD,IAAI,GAAGxD,SAAS,CAACE,CAAC;MACjCD,YAAY,CAAC+B,IAAI,KAAK;QACpB9B,CAAC,EAAEsD,IAAI;QACPrD,CAAC,EAAEgD,MAAM,GAAGM,MAAM,IAAIN,MAAM,GAAGnB,IAAI,CAAC7B,CAAC,CAAC;QACtCC,CAAC,EAAEiD,MAAM,GAAGI,MAAM,IAAIJ,MAAM,GAAGrB,IAAI,CAAC5B,CAAC;MACvC,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM0D,gBAAgB,GAAG3F,WAAW,CAAC,MAAM;IACzC,IAAI,CAAC6B,UAAU,IAAI,CAACA,UAAU,CAAC+D,IAAI,IAAI,CAAClD,UAAU,IAAI,CAAClB,SAAS,CAAC0D,OAAO,EAAE;IAE1E,MAAMW,MAAM,GAAGrE,SAAS,CAAC0D,OAAO;IAChC,MAAMY,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,KAAK,GAAG,IAAI;MAAEC,MAAM,GAAG,GAAG;;IAEhC;IACAH,GAAG,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,KAAK,EAAEC,MAAM,CAAC;IAElC,MAAME,QAAQ,GAAGtE,UAAU,CAAC+D,IAAI,CAACA,IAAI;IACrC,IAAIQ,aAAa,GAAG,CAAC;;IAErB;IACA,MAAMC,aAAa,GAAG5E,MAAM,CAAC6E,GAAG,CAACC,IAAI,IAAI;MACvC,MAAMC,SAAS,GAAG9D,UAAU,CAAC,CAAC6D,IAAI,CAACE,GAAG,EAAEF,IAAI,CAAC1D,GAAG,CAAC,CAAC;MAClD,IAAI,CAAC2D,SAAS,EAAE,OAAO,IAAI;;MAE3B;MACA,MAAME,YAAY,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGvE,SAAS,CAACE,CAAC,GAAGF,SAAS,CAACG,CAAC;MAC7D,MAAMuE,YAAY,GAAGH,SAAS,CAAC,CAAC,CAAC,GAAGvE,SAAS,CAACE,CAAC,GAAGF,SAAS,CAACI,CAAC;MAE7D,OAAO;QAAED,CAAC,EAAEsE,YAAY;QAAErE,CAAC,EAAEsE;MAAa,CAAC;IAC7C,CAAC,CAAC,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,IAAI,CAAC;;IAE9B;IACA,MAAMC,SAAS,GAAGhB,GAAG,CAACiB,eAAe,CAACf,KAAK,EAAEC,MAAM,CAAC;IACpD,MAAML,IAAI,GAAGkB,SAAS,CAAClB,IAAI;;IAE3B;IACA,MAAMoB,YAAY,GAAG,CAAC;IACtB,MAAMC,QAAQ,GAAG/C,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACgD,KAAK,CAACF,YAAY,GAAG/E,SAAS,CAACE,CAAC,CAAC,CAAC;IACpE,MAAMgF,eAAe,GAAG,CAAC,CAAC,CAAC;;IAE3B;IACA,KAAK,MAAMC,KAAK,IAAIjB,QAAQ,EAAE;MAC5B,MAAMK,SAAS,GAAG9D,UAAU,CAAC,CAAC0E,KAAK,CAACtE,GAAG,EAAEsE,KAAK,CAACvE,GAAG,CAAC,CAAC;MACpD,IAAI,CAAC2D,SAAS,EAAE;;MAEhB;MACA,MAAME,YAAY,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGvE,SAAS,CAACE,CAAC,GAAGF,SAAS,CAACG,CAAC;MAC7D,MAAMuE,YAAY,GAAGH,SAAS,CAAC,CAAC,CAAC,GAAGvE,SAAS,CAACE,CAAC,GAAGF,SAAS,CAACI,CAAC;;MAE7D;MACA,IAAIqE,YAAY,GAAG,CAACO,QAAQ,IAAIP,YAAY,IAAIV,KAAK,GAAGiB,QAAQ,IAC5DN,YAAY,GAAG,CAACM,QAAQ,IAAIN,YAAY,IAAIV,MAAM,GAAGgB,QAAQ,EAAE;;MAEnE;MACA,MAAMI,cAAc,GAAGhB,aAAa,CAACiB,IAAI,CAACC,OAAO,IAAI;QACnD,MAAMC,QAAQ,GAAGtD,IAAI,CAACuD,IAAI,CACxBvD,IAAI,CAACwD,GAAG,CAAChB,YAAY,GAAGa,OAAO,CAACnF,CAAC,EAAE,CAAC,CAAC,GACrC8B,IAAI,CAACwD,GAAG,CAACf,YAAY,GAAGY,OAAO,CAAClF,CAAC,EAAE,CAAC,CACtC,CAAC;QACD,OAAOmF,QAAQ,GAAGL,eAAe;MACnC,CAAC,CAAC;MAEF,IAAIE,cAAc,EAAE,SAAS,CAAC;;MAE9B;MACA,MAAMM,KAAK,GAAGlH,QAAQ,CAAC2G,KAAK,CAACQ,KAAK,CAAC;MACnC,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGhH,QAAQ,CAAC4G,KAAK,CAAC;;MAEjC;MACA,MAAMK,SAAS,GAAG9D,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACgD,KAAK,CAACW,CAAC,GAAG,GAAG,CAAC,CAAC;MACpD,MAAMI,SAAS,GAAG/D,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACgD,KAAK,CAACY,CAAC,GAAG,GAAG,CAAC,CAAC;MACpD,MAAMI,SAAS,GAAGhE,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACgD,KAAK,CAACa,CAAC,GAAG,GAAG,CAAC,CAAC;;MAEpD;MACA,MAAMI,MAAM,GAAGjE,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACkE,KAAK,CAAC1B,YAAY,GAAGO,QAAQ,GAAC,CAAC,CAAC,CAAC;MACjE,MAAMoB,IAAI,GAAGnE,IAAI,CAACC,GAAG,CAAC6B,KAAK,GAAG,CAAC,EAAE9B,IAAI,CAACkE,KAAK,CAAC1B,YAAY,GAAGO,QAAQ,GAAC,CAAC,CAAC,CAAC;MACvE,MAAMqB,MAAM,GAAGpE,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEH,IAAI,CAACkE,KAAK,CAACzB,YAAY,GAAGM,QAAQ,GAAC,CAAC,CAAC,CAAC;MACjE,MAAMsB,IAAI,GAAGrE,IAAI,CAACC,GAAG,CAAC8B,MAAM,GAAG,CAAC,EAAE/B,IAAI,CAACkE,KAAK,CAACzB,YAAY,GAAGM,QAAQ,GAAC,CAAC,CAAC,CAAC;MAExE,KAAK,IAAIuB,EAAE,GAAGL,MAAM,EAAEK,EAAE,IAAIH,IAAI,EAAEG,EAAE,EAAE,EAAE;QACtC,KAAK,IAAIC,EAAE,GAAGH,MAAM,EAAEG,EAAE,IAAIF,IAAI,EAAEE,EAAE,EAAE,EAAE;UACtC,MAAMC,KAAK,GAAG,CAACD,EAAE,GAAGzC,KAAK,GAAGwC,EAAE,IAAI,CAAC;UACnC5C,IAAI,CAAC8C,KAAK,CAAC,GAAGV,SAAS,CAAC,CAAK;UAC7BpC,IAAI,CAAC8C,KAAK,GAAG,CAAC,CAAC,GAAGT,SAAS,CAAC,CAAC;UAC7BrC,IAAI,CAAC8C,KAAK,GAAG,CAAC,CAAC,GAAGR,SAAS,CAAC,CAAC;UAC7BtC,IAAI,CAAC8C,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QACzB;MACF;MAEAtC,aAAa,EAAE;IACjB;;IAEA;IACAN,GAAG,CAAC6C,YAAY,CAAC7B,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAEjCnD,OAAO,CAACC,GAAG,CAAC,mBAAmBwC,aAAa,yBAAyBnE,SAAS,CAACE,CAAC,CAACyG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;EAChG,CAAC,EAAE,CAAC/G,UAAU,EAAEa,UAAU,EAAEjB,MAAM,EAAEQ,SAAS,CAAC,CAAC;;EAE/C;EACApC,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8B,KAAK,IAAI,CAACA,KAAK,CAAC2B,QAAQ,IAAI,CAAC7B,MAAM,CAACX,MAAM,IAAIiB,SAAS,IAAI,CAACR,MAAM,CAAC2D,OAAO,EAAE;IAEjF,IAAI;MACF,MAAMc,KAAK,GAAG,IAAI;QAAEC,MAAM,GAAG,GAAG;MAChC,MAAM4C,GAAG,GAAG5I,EAAE,CAAC6I,MAAM,CAACvH,MAAM,CAAC2D,OAAO,CAAC;;MAErC;MACA2D,GAAG,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;MAE3B;MACAH,GAAG,CAACI,IAAI,CAAC,OAAO,EAAEjD,KAAK,CAAC,CAACiD,IAAI,CAAC,QAAQ,EAAEhD,MAAM,CAAC;;MAE/C;MACA,MAAMiD,aAAa,GAAGjJ,EAAE,CAACkJ,gBAAgB,CAAC,CAAC,CAACC,OAAO,CAAC,CAACpD,KAAK,EAAEC,MAAM,CAAC,EAAEtE,KAAK,CAAC;MAC3E,MAAM0H,IAAI,GAAGpJ,EAAE,CAACqJ,OAAO,CAAC,CAAC,CAAC5G,UAAU,CAACwG,aAAa,CAAC;MACnDvG,aAAa,CAACuG,aAAa,CAAC;;MAE5B;MACA,MAAMpB,CAAC,GAAGe,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACN,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC;;MAEpD;MACAnB,CAAC,CAACyB,MAAM,CAAC,GAAG,CAAC,CACVN,IAAI,CAAC,OAAO,EAAE,sBAAsB,CAAC,CACrCF,SAAS,CAAC,MAAM,CAAC,CACjBnD,IAAI,CAACjE,KAAK,CAAC2B,QAAQ,CAAC,CACpBkG,KAAK,CAAC,CAAC,CACPD,MAAM,CAAC,MAAM,CAAC,CACdN,IAAI,CAAC,GAAG,EAAEI,IAAI,CAAC,CACfJ,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;;MAE5B;MACAnB,CAAC,CAACyB,MAAM,CAAC,GAAG,CAAC,CACVN,IAAI,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAClCF,SAAS,CAAC,MAAM,CAAC,CACjBnD,IAAI,CAACjE,KAAK,CAAC2B,QAAQ,CAAC,CACpBkG,KAAK,CAAC,CAAC,CACPD,MAAM,CAAC,MAAM,CAAC,CACdN,IAAI,CAAC,GAAG,EAAEI,IAAI,CAAC,CACfJ,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CACzBQ,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAC9BF,MAAM,CAAC,OAAO,CAAC,CACfG,IAAI,CAACC,CAAC,IAAI;QACT,IAAI,CAACA,CAAC,IAAI,CAACA,CAAC,CAACC,UAAU,EAAE,OAAO,SAAS;QACzC,MAAMC,WAAW,GAAGF,CAAC,CAACC,UAAU,CAACE,IAAI,IAAIH,CAAC,CAACC,UAAU,CAACG,IAAI,IAAI,SAAS;QACvE,IAAI;UACF,MAAMC,QAAQ,GAAG/J,EAAE,CAACgK,WAAW,CAACN,CAAC,CAAC;UAClC,IAAIK,QAAQ,IAAIA,QAAQ,CAAClJ,MAAM,IAAI,CAAC,EAAE;YACpC,MAAM,CAACgC,GAAG,EAAED,GAAG,CAAC,GAAGmH,QAAQ;YAC3B,MAAME,SAAS,GAAGtH,kBAAkB,CAACC,GAAG,EAAEC,GAAG,CAAC;YAC9C,OAAOoH,SAAS,KAAK,IAAI,GACrB,GAAGL,WAAW,0BAA0BK,SAAS,CAACtB,OAAO,CAAC,CAAC,CAAC,QAAQ,GACpE,GAAGiB,WAAW,EAAE;UACtB;QACF,CAAC,CAAC,OAAO9F,KAAK,EAAE;UACdJ,OAAO,CAACG,IAAI,CAAC,yCAAyC,EAAE+F,WAAW,EAAE9F,KAAK,CAAC;QAC7E;QACA,OAAO8F,WAAW;MACpB,CAAC,CAAC;;MAEJ;MACA,MAAMM,WAAW,GAAGrC,CAAC,CAACyB,MAAM,CAAC,GAAG,CAAC,CAACN,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;MAEzDxH,MAAM,CAAC2I,OAAO,CAAC7D,IAAI,IAAI;QACrB,MAAMC,SAAS,GAAG0C,aAAa,CAAC,CAAC3C,IAAI,CAACE,GAAG,EAAEF,IAAI,CAAC1D,GAAG,CAAC,CAAC;QACrD,IAAI2D,SAAS,EAAE;UACb2D,WAAW,CAACZ,MAAM,CAAC,QAAQ,CAAC,CACzBN,IAAI,CAAC,IAAI,EAAEzC,SAAS,CAAC,CAAC,CAAC,CAAC,CACxByC,IAAI,CAAC,IAAI,EAAEzC,SAAS,CAAC,CAAC,CAAC,CAAC,CACxByC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,MAAM,EAAE5H,cAAc,CAACgJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/D,IAAI,KAAKA,IAAI,CAACA,IAAI,IAAI+D,CAAC,CAACC,OAAO,KAAKhE,IAAI,CAACgE,OAAO,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC,CAClHtB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBQ,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BA,KAAK,CAAC,QAAQ,EAAE,0CAA0C,CAAC,CAC3De,EAAE,CAAC,OAAO,EAAE,MAAM;YACjB,IAAIpJ,YAAY,EAAEA,YAAY,CAACmF,IAAI,CAAC;UACtC,CAAC,CAAC,CACDgD,MAAM,CAAC,OAAO,CAAC,CACfG,IAAI,CAAC,MAAM;YACV,MAAMQ,SAAS,GAAGtH,kBAAkB,CAAC2D,IAAI,CAAC1D,GAAG,EAAE0D,IAAI,CAACE,GAAG,CAAC;YACxD,OAAOyD,SAAS,KAAK,IAAI,GACrB,GAAG3D,IAAI,CAACA,IAAI,KAAKA,IAAI,CAACgE,OAAO,mBAAmBL,SAAS,CAACtB,OAAO,CAAC,CAAC,CAAC,QAAQ,GAC5E,GAAGrC,IAAI,CAACA,IAAI,KAAKA,IAAI,CAACgE,OAAO,kBAAkB;UACrD,CAAC,CAAC;QACN;MACF,CAAC,CAAC;;MAEF;MACAzC,CAAC,CAACmB,IAAI,CAAC,WAAW,EAAE,aAAahH,SAAS,CAACG,CAAC,KAAKH,SAAS,CAACI,CAAC,WAAWJ,SAAS,CAACE,CAAC,GAAG,CAAC;;MAEtF;MACA,IAAIF,SAAS,CAACE,CAAC,GAAG,CAAC,EAAE;QACnBgI,WAAW,CAACpB,SAAS,CAAC,QAAQ,CAAC,CAC5BE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAGhH,SAAS,CAACE,CAAC,CAAC,CAC1B8G,IAAI,CAAC,cAAc,EAAE,CAAC,GAAGhH,SAAS,CAACE,CAAC,CAAC;QAExC2F,CAAC,CAACiB,SAAS,CAAC,yBAAyB,CAAC,CACnCE,IAAI,CAAC,cAAc,EAAE,GAAG,GAAGhH,SAAS,CAACE,CAAC,CAAC;QAC1C2F,CAAC,CAACiB,SAAS,CAAC,4BAA4B,CAAC,CACtCE,IAAI,CAAC,cAAc,EAAE,GAAG,GAAGhH,SAAS,CAACE,CAAC,CAAC;MAC5C;;MAEA;MACA,IAAIN,UAAU,EAAE;QACd,MAAM4I,WAAW,GAAG,GAAG;QACvB,MAAMC,YAAY,GAAG,EAAE;QACvB,MAAMC,OAAO,GAAG3E,KAAK,GAAGyE,WAAW,GAAG,EAAE;QACxC,MAAMG,OAAO,GAAG3E,MAAM,GAAG,EAAE;QAE3B,MAAM4E,WAAW,GAAGhC,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACN,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;;QAE3D;QACA4B,WAAW,CAACtB,MAAM,CAAC,MAAM,CAAC,CACvBN,IAAI,CAAC,GAAG,EAAE0B,OAAO,GAAG,EAAE,CAAC,CACvB1B,IAAI,CAAC,GAAG,EAAE2B,OAAO,GAAG,EAAE,CAAC,CACvB3B,IAAI,CAAC,OAAO,EAAEwB,WAAW,GAAG,EAAE,CAAC,CAC/BxB,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;;QAEhB;QACA,MAAM6B,WAAW,GAAG7K,EAAE,CAAC8K,WAAW,CAAC,CAAC,CACjCC,MAAM,CAAC,CAAC,CAAC,EAAEzK,MAAM,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC,CAC9BmK,KAAK,CAAC,CAAC,CAAC,EAAER,WAAW,CAAC,CAAC;QAE1BI,WAAW,CAACtB,MAAM,CAAC,GAAG,CAAC,CACpBR,SAAS,CAAC,MAAM,CAAC,CACjBnD,IAAI,CAACpF,MAAM,CAAC0K,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACzB1B,KAAK,CAAC,CAAC,CACPD,MAAM,CAAC,MAAM,CAAC,CACdN,IAAI,CAAC,GAAG,EAAE,CAACU,CAAC,EAAE9I,CAAC,KAAK8J,OAAO,GAAGG,WAAW,CAACjK,CAAC,CAAC,CAAC,CAC7CoI,IAAI,CAAC,GAAG,EAAE2B,OAAO,CAAC,CAClB3B,IAAI,CAAC,OAAO,EAAEwB,WAAW,IAAIjK,MAAM,CAACM,MAAM,GAAG,CAAC,CAAC,CAAC,CAChDmI,IAAI,CAAC,QAAQ,EAAEyB,YAAY,CAAC,CAC5BzB,IAAI,CAAC,MAAM,EAAEU,CAAC,IAAIA,CAAC,CAAC;;QAEvB;QACAkB,WAAW,CAACtB,MAAM,CAAC,MAAM,CAAC,CACvBN,IAAI,CAAC,GAAG,EAAE0B,OAAO,CAAC,CAClB1B,IAAI,CAAC,GAAG,EAAE2B,OAAO,GAAG,CAAC,CAAC,CACtB3B,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CACrBA,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAC3BS,IAAI,CAAC,oCAAoC,CAAC;;QAE7C;QACA,MAAMyB,WAAW,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC/CN,WAAW,CAACtB,MAAM,CAAC,GAAG,CAAC,CACpBR,SAAS,CAAC,MAAM,CAAC,CACjBnD,IAAI,CAACuF,WAAW,CAAC,CACjB3B,KAAK,CAAC,CAAC,CACPD,MAAM,CAAC,MAAM,CAAC,CACdN,IAAI,CAAC,GAAG,EAAEU,CAAC,IAAI;UACd,MAAMjB,KAAK,GAAGnI,MAAM,CAAC6K,SAAS,CAACrD,CAAC,IAAIA,CAAC,IAAI4B,CAAC,CAAC;UAC3C,OAAOgB,OAAO,GAAGG,WAAW,CAAC5G,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEqE,KAAK,CAAC,CAAC;QAClD,CAAC,CAAC,CACDO,IAAI,CAAC,GAAG,EAAE2B,OAAO,GAAGF,YAAY,GAAG,EAAE,CAAC,CACtCzB,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CACrBS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC;MACjB;IAEF,CAAC,CAAC,OAAO5F,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACrE;EACF,CAAC,EAAE,CAACpC,KAAK,EAAEF,MAAM,EAAEJ,cAAc,EAAED,YAAY,EAAEW,SAAS,EAAEE,SAAS,EAAEJ,UAAU,EAAEe,kBAAkB,CAAC,CAAC;;EAEvG;EACA/C,SAAS,CAAC,MAAM;IACd8F,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;;EAEtB;EACA9F,SAAS,CAAC,MAAM;IACd,MAAMwL,qBAAqB,GAAI7G,KAAK,IAAKI,eAAe,CAACJ,KAAK,CAAC;IAC/D,MAAM8G,mBAAmB,GAAGA,CAAA,KAAMvG,aAAa,CAAC,CAAC;IAEjD,IAAIzC,UAAU,EAAE;MACdiJ,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEH,qBAAqB,CAAC;MAC7DE,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEF,mBAAmB,CAAC;IAC3D;IAEA,OAAO,MAAM;MACXC,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEJ,qBAAqB,CAAC;MAChEE,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEH,mBAAmB,CAAC;IAC9D,CAAC;EACH,CAAC,EAAE,CAAChJ,UAAU,EAAEE,SAAS,CAAC,CAAC;;EAE3B;EACA3C,SAAS,CAAC,MAAM;IACd,MAAMgJ,GAAG,GAAGtH,MAAM,CAAC2D,OAAO;IAC1B,IAAI,CAAC2D,GAAG,EAAE;IAEVA,GAAG,CAAC2C,gBAAgB,CAAC,OAAO,EAAExG,WAAW,EAAE;MAAE0G,OAAO,EAAE;IAAM,CAAC,CAAC;IAE9D,OAAO,MAAM;MACX7C,GAAG,CAAC4C,mBAAmB,CAAC,OAAO,EAAEzG,WAAW,CAAC;IAC/C,CAAC;EACH,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAIjD,SAAS,EAAE;IACb,oBACE3B,OAAA;MAAKqJ,KAAK,EAAE;QAAEkC,SAAS,EAAE,QAAQ;QAAEC,MAAM,EAAE,EAAE;QAAEjE,KAAK,EAAE;MAAO,CAAE;MAAAkE,QAAA,EAAC;IAEhE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,oBACE7L,OAAA;IAAKqJ,KAAK,EAAE;MAAEkC,SAAS,EAAE;IAAS,CAAE;IAAAE,QAAA,gBAClCzL,OAAA;MAAKqJ,KAAK,EAAE;QAAEyC,QAAQ,EAAE,UAAU;QAAEC,OAAO,EAAE;MAAe,CAAE;MAAAN,QAAA,gBAE5DzL,OAAA;QAAKqJ,KAAK,EAAE;UACVyC,QAAQ,EAAE,UAAU;UACpB3G,GAAG,EAAE,EAAE;UACPF,IAAI,EAAE,EAAE;UACR+G,MAAM,EAAE,EAAE;UACVD,OAAO,EAAE,MAAM;UACfE,aAAa,EAAE,QAAQ;UACvBC,GAAG,EAAE;QACP,CAAE;QAAAT,QAAA,gBACAzL,OAAA;UAAQmM,OAAO,EAAEvI,YAAa;UAACyF,KAAK,EAAE+C,WAAY;UAACC,KAAK,EAAC,cAAI;UAAAZ,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxE7L,OAAA;UAAQmM,OAAO,EAAEnI,aAAc;UAACqF,KAAK,EAAE+C,WAAY;UAACC,KAAK,EAAC,cAAI;UAAAZ,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzE7L,OAAA;UAAQmM,OAAO,EAAEjI,WAAY;UAACmF,KAAK,EAAE+C,WAAY;UAACC,KAAK,EAAC,cAAI;UAAAZ,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC,eAEN7L,OAAA;QACEsM,GAAG,EAAEnL,MAAO;QACZkI,KAAK,EAAE;UAAEkD,MAAM,EAAErK,UAAU,GAAG,UAAU,GAAG;QAAO,CAAE;QACpDsK,WAAW,EAAErI;MAAgB;QAAAuH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAGF7L,OAAA;QACEsM,GAAG,EAAElL,SAAU;QACfwE,KAAK,EAAE,IAAK;QACZC,MAAM,EAAE,GAAI;QACZwD,KAAK,EAAE;UACLyC,QAAQ,EAAE,UAAU;UACpB3G,GAAG,EAAE,CAAC;UACNF,IAAI,EAAE,CAAC;UACPwH,aAAa,EAAE,MAAM;UAAE;UACvBT,MAAM,EAAE;QACV;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7L,OAAA;MAAKqJ,KAAK,EAAE;QAACqD,SAAS,EAAE,CAAC;QAAEnF,KAAK,EAAE;MAAM,CAAE;MAAAkE,QAAA,EACvChK,UAAU,GACT,8BAA8BI,SAAS,CAACE,CAAC,CAACyG,OAAO,CAAC,CAAC,CAAC,GAAG,GACvD;IAA0C;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3K,EAAA,CAzdQH,qBAAqB;AAAA4L,EAAA,GAArB5L,qBAAqB;AA2d9B,MAAMqL,WAAW,GAAG;EAClBxG,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACV+G,MAAM,EAAE,gBAAgB;EACxBC,eAAe,EAAE,OAAO;EACxBC,YAAY,EAAE,KAAK;EACnBP,MAAM,EAAE,SAAS;EACjBQ,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,MAAM;EAClBjB,OAAO,EAAE,MAAM;EACfkB,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE,QAAQ;EACxBC,SAAS,EAAE;AACb,CAAC;AAED,eAAepM,qBAAqB;AAAC,IAAA4L,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}