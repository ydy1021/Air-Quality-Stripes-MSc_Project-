{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard_ComparisionVersion\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport PM25DataLoader from './PM25DataLoader';\nimport PM25Canvas from './PM25Canvas';\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\nconst CITIES_JSON = 'cities_with_coords.json';\nimport { bounds, c_list } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getColor(val) {\n  if (val === null || val === undefined || isNaN(val)) return '#e0e0e0';\n  for (let i = 0; i < bounds.length - 1; ++i) {\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\n  }\n  return c_list[c_list.length - 1];\n}\nfunction Map({\n  onCitySelect,\n  selectedCities,\n  maxCities = 2\n}) {\n  _s();\n  const svgRef = useRef();\n  const canvasRef = useRef();\n  const [cities, setCities] = useState([]);\n  const [world, setWorld] = useState(null);\n  const [pm25Loader, setPm25Loader] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [transform, setTransform] = useState({\n    k: 1,\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMouse, setLastMouse] = useState({\n    x: 0,\n    y: 0\n  });\n  const projectionRef = useRef(null);\n\n  // 获取地理位置的PM2.5值\n  const getPM25ForLocation = (lat, lon) => {\n    if (!pm25Loader) return null;\n    return pm25Loader.getPM25Value(lat, lon);\n  };\n\n  // 加载数据\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        const [worldData, citiesData] = await Promise.all([d3.json(WORLD_GEOJSON_URL), d3.json(CITIES_JSON)]);\n        if (worldData && worldData.features) {\n          setWorld(worldData);\n        }\n        if (citiesData && Array.isArray(citiesData)) {\n          setCities(citiesData);\n        }\n\n        // 加载PM2.5数据\n        const loader = new PM25DataLoader();\n        const success = await loader.loadData();\n        if (success) {\n          setPm25Loader(loader);\n          console.log('PM2.5 data stats:', loader.getDataStats());\n        } else {\n          console.warn('PM2.5 data loading failed, using default colors');\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // 鼠标事件处理\n  const handleMouseDown = event => {\n    setIsDragging(true);\n    setLastMouse({\n      x: event.clientX,\n      y: event.clientY\n    });\n    event.preventDefault();\n  };\n  const handleMouseMove = event => {\n    if (!isDragging) return;\n    const deltaX = event.clientX - lastMouse.x;\n    const deltaY = event.clientY - lastMouse.y;\n    setTransform(prev => ({\n      ...prev,\n      x: prev.x + deltaX,\n      y: prev.y + deltaY\n    }));\n    setLastMouse({\n      x: event.clientX,\n      y: event.clientY\n    });\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleWheel = event => {\n    event.preventDefault();\n    const rect = svgRef.current.getBoundingClientRect();\n    const mouseX = event.clientX - rect.left;\n    const mouseY = event.clientY - rect.top;\n    const scale = event.deltaY > 0 ? 0.9 : 1.1;\n    const newK = Math.min(Math.max(transform.k * scale, 0.5), 8);\n    if (newK !== transform.k) {\n      const factor = newK / transform.k;\n      setTransform(prev => ({\n        k: newK,\n        x: mouseX - factor * (mouseX - prev.x),\n        y: mouseY - factor * (mouseY - prev.y)\n      }));\n    }\n  };\n\n  // 缩放控制函数\n  const handleZoomIn = () => {\n    setTransform(prev => ({\n      ...prev,\n      k: Math.min(prev.k * 1.5, 8)\n    }));\n  };\n  const handleZoomOut = () => {\n    setTransform(prev => ({\n      ...prev,\n      k: Math.max(prev.k / 1.5, 0.5)\n    }));\n  };\n  const handleReset = () => {\n    setTransform({\n      k: 1,\n      x: 0,\n      y: 0\n    });\n  };\n\n  // 绘制地图\n  useEffect(() => {\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current || !canvasRef.current) return;\n    try {\n      const width = 1000,\n        height = 500;\n      const svg = d3.select(svgRef.current);\n\n      // 清除之前的内容\n      svg.selectAll('*').remove();\n\n      // 设置SVG尺寸\n      svg.attr('width', width).attr('height', height);\n\n      // 投影\n      const mapProjection = d3.geoNaturalEarth1().fitSize([width, height], world);\n      const path = d3.geoPath().projection(mapProjection);\n      projectionRef.current = mapProjection;\n\n      // 创建主要的g元素用于缩放变换\n      const g = svg.append('g').attr('class', 'map-group');\n\n      // 绘制国家\n      g.append('g').attr('class', 'countries').selectAll('path').data(world.features).enter().append('path').attr('d', path).attr('fill', '#f0f0f0').attr('stroke', '#666').attr('stroke-width', 0.5).style('pointer-events', 'all').append('title').text(d => {\n        if (!d || !d.properties) return 'Unknown';\n        const countryName = d.properties.NAME || d.properties.name || 'Unknown';\n        try {\n          const centroid = d3.geoCentroid(d);\n          if (centroid && centroid.length >= 2) {\n            const [lon, lat] = centroid;\n            const pm25Value = getPM25ForLocation(lat, lon);\n            return pm25Value !== null ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${countryName}`;\n          }\n        } catch (error) {\n          console.warn('Error calculating centroid for country:', countryName, error);\n        }\n        return countryName;\n      });\n\n      // 绘制城市点\n      const citiesGroup = g.append('g').attr('class', 'cities');\n      cities.forEach(city => {\n        const projected = mapProjection([city.lng, city.lat]);\n        if (projected) {\n          citiesGroup.append('circle').attr('cx', projected[0]).attr('cy', projected[1]).attr('r', 5).attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2').attr('fill-opacity', 0.7) // 设置填充透明度为70%\n          .attr('stroke', '#fff').attr('stroke-width', 2).attr('stroke-opacity', 0.9) // 设置边框透明度为90%\n          .style('cursor', 'pointer').on('click', () => {\n            if (onCitySelect) onCitySelect(city);\n          }).append('title').text(() => {\n            const pm25Value = getPM25ForLocation(city.lat, city.lng);\n            return pm25Value !== null ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${city.city}, ${city.country}\\nPM2.5: No data`;\n          });\n        }\n      });\n\n      // 应用变换\n      g.attr('transform', `translate(${transform.x}, ${transform.y}) scale(${transform.k})`);\n\n      // 调整元素大小\n      if (transform.k > 0) {\n        citiesGroup.selectAll('circle').attr('r', 5 / transform.k).attr('stroke-width', 2 / transform.k);\n        g.selectAll('.countries path').attr('stroke-width', 0.5 / transform.k);\n      }\n\n      // 添加缩放控制按钮\n      const controls = svg.append('g').attr('class', 'zoom-controls').raise(); // 将控制按钮组移到SVG的最上层\n\n      const buttonData = [{\n        text: '+',\n        action: handleZoomIn,\n        title: '放大'\n      }, {\n        text: '−',\n        action: handleZoomOut,\n        title: '缩小'\n      }, {\n        text: '⌂',\n        action: handleReset,\n        title: '重置'\n      }];\n      buttonData.forEach((btn, i) => {\n        const button = controls.append('g').attr('class', 'zoom-button').attr('transform', `translate(20, ${20 + i * 35})`).style('cursor', 'pointer').on('click', btn.action);\n        button.append('rect').attr('width', 30).attr('height', 30).attr('fill', 'white').attr('stroke', '#ccc').attr('rx', 3);\n        button.append('text').attr('x', 15).attr('y', 20).attr('text-anchor', 'middle').attr('font-size', 16).attr('font-weight', 'bold').text(btn.text);\n        button.append('title').text(btn.title);\n      });\n\n      // 初始渲染Canvas\n      if (canvasRef.current && pm25Loader && pm25Loader.data) {\n        try {\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          if (!ctx) {\n            console.error('Failed to get canvas context');\n            return;\n          }\n          PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, mapProjection, transform, cities, width, height);\n        } catch (error) {\n          console.error('Error rendering PM2.5 data:', error);\n        }\n      }\n    } catch (error) {\n      console.error('Error rendering map:', error);\n    }\n  }, [world, cities, selectedCities, onCitySelect, isLoading, transform, pm25Loader]);\n\n  // 添加全局鼠标事件监听器\n  useEffect(() => {\n    const handleGlobalMouseMove = event => handleMouseMove(event);\n    const handleGlobalMouseUp = () => handleMouseUp();\n    if (isDragging) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n    };\n  }, [isDragging, lastMouse]);\n\n  // 添加wheel事件监听器\n  useEffect(() => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    svg.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => {\n      svg.removeEventListener('wheel', handleWheel);\n    };\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: 20,\n        color: '#666'\n      },\n      children: \"Loading PM2.5 data and map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        style: {\n          cursor: isDragging ? 'grabbing' : 'grab'\n        },\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1000,\n        height: 500,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"qUNE2ejXyObYfDguUxkAmHxbnN0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","PM25DataLoader","PM25Canvas","WORLD_GEOJSON_URL","CITIES_JSON","bounds","c_list","jsxDEV","_jsxDEV","getColor","val","undefined","isNaN","i","length","Map","onCitySelect","selectedCities","maxCities","_s","svgRef","canvasRef","cities","setCities","world","setWorld","pm25Loader","setPm25Loader","isLoading","setIsLoading","transform","setTransform","k","x","y","isDragging","setIsDragging","lastMouse","setLastMouse","projectionRef","getPM25ForLocation","lat","lon","getPM25Value","loadData","worldData","citiesData","Promise","all","json","features","Array","isArray","loader","success","console","log","getDataStats","warn","error","handleMouseDown","event","clientX","clientY","preventDefault","handleMouseMove","deltaX","deltaY","prev","handleMouseUp","handleWheel","rect","current","getBoundingClientRect","mouseX","left","mouseY","top","scale","newK","Math","min","max","factor","handleZoomIn","handleZoomOut","handleReset","width","height","svg","select","selectAll","remove","attr","mapProjection","geoNaturalEarth1","fitSize","path","geoPath","projection","g","append","data","enter","style","text","d","properties","countryName","NAME","name","centroid","geoCentroid","pm25Value","toFixed","citiesGroup","forEach","city","projected","lng","find","c","country","on","controls","raise","buttonData","action","title","btn","button","canvas","ctx","getContext","renderPM25Data","handleGlobalMouseMove","handleGlobalMouseUp","document","addEventListener","removeEventListener","passive","textAlign","margin","color","children","fileName","_jsxFileName","lineNumber","columnNumber","position","display","ref","cursor","onMouseDown","pointerEvents","zIndex","_c","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard_ComparisionVersion/src/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport PM25DataLoader from './PM25DataLoader';\r\nimport PM25Canvas from './PM25Canvas';\r\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\r\nconst CITIES_JSON = 'cities_with_coords.json';\r\n\r\nimport { bounds, c_list } from './constants';\r\n\r\nfunction getColor(val) {\r\n  if (val === null || val === undefined || isNaN(val)) return '#e0e0e0';\r\n  for (let i = 0; i < bounds.length - 1; ++i) {\r\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\r\n  }\r\n  return c_list[c_list.length - 1];\r\n}\r\n\r\nfunction Map({ onCitySelect, selectedCities, maxCities = 2 }) {\r\n  const svgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const [cities, setCities] = useState([]);\r\n  const [world, setWorld] = useState(null);\r\n  const [pm25Loader, setPm25Loader] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [transform, setTransform] = useState({ k: 1, x: 0, y: 0 });\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [lastMouse, setLastMouse] = useState({ x: 0, y: 0 });\r\n  const projectionRef = useRef(null);\r\n\r\n  // 获取地理位置的PM2.5值\r\n  const getPM25ForLocation = (lat, lon) => {\r\n    if (!pm25Loader) return null;\r\n    return pm25Loader.getPM25Value(lat, lon);\r\n  };\r\n\r\n  // 加载数据\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const [worldData, citiesData] = await Promise.all([\r\n          d3.json(WORLD_GEOJSON_URL),\r\n          d3.json(CITIES_JSON)\r\n        ]);\r\n        \r\n        if (worldData && worldData.features) {\r\n          setWorld(worldData);\r\n        }\r\n        if (citiesData && Array.isArray(citiesData)) {\r\n          setCities(citiesData);\r\n        }\r\n\r\n        // 加载PM2.5数据\r\n        const loader = new PM25DataLoader();\r\n        const success = await loader.loadData();\r\n        if (success) {\r\n          setPm25Loader(loader);\r\n          console.log('PM2.5 data stats:', loader.getDataStats());\r\n        } else {\r\n          console.warn('PM2.5 data loading failed, using default colors');\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // 鼠标事件处理\r\n  const handleMouseDown = (event) => {\r\n    setIsDragging(true);\r\n    setLastMouse({ x: event.clientX, y: event.clientY });\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    if (!isDragging) return;\r\n    \r\n    const deltaX = event.clientX - lastMouse.x;\r\n    const deltaY = event.clientY - lastMouse.y;\r\n    \r\n    setTransform(prev => ({\r\n      ...prev,\r\n      x: prev.x + deltaX,\r\n      y: prev.y + deltaY\r\n    }));\r\n    \r\n    setLastMouse({ x: event.clientX, y: event.clientY });\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleWheel = (event) => {\r\n    event.preventDefault();\r\n    const rect = svgRef.current.getBoundingClientRect();\r\n    const mouseX = event.clientX - rect.left;\r\n    const mouseY = event.clientY - rect.top;\r\n    \r\n    const scale = event.deltaY > 0 ? 0.9 : 1.1;\r\n    const newK = Math.min(Math.max(transform.k * scale, 0.5), 8);\r\n    \r\n    if (newK !== transform.k) {\r\n      const factor = newK / transform.k;\r\n      setTransform(prev => ({\r\n        k: newK,\r\n        x: mouseX - factor * (mouseX - prev.x),\r\n        y: mouseY - factor * (mouseY - prev.y)\r\n      }));\r\n    }\r\n  };\r\n\r\n  // 缩放控制函数\r\n  const handleZoomIn = () => {\r\n    setTransform(prev => ({\r\n      ...prev,\r\n      k: Math.min(prev.k * 1.5, 8)\r\n    }));\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setTransform(prev => ({\r\n      ...prev,\r\n      k: Math.max(prev.k / 1.5, 0.5)\r\n    }));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setTransform({ k: 1, x: 0, y: 0 });\r\n  };\r\n\r\n  // 绘制地图\r\n  useEffect(() => {\r\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current || !canvasRef.current) return;\r\n    \r\n    try {\r\n      const width = 1000, height = 500;\r\n      const svg = d3.select(svgRef.current);\r\n      \r\n      // 清除之前的内容\r\n      svg.selectAll('*').remove();\r\n      \r\n      // 设置SVG尺寸\r\n      svg.attr('width', width).attr('height', height);\r\n\r\n      // 投影\r\n      const mapProjection = d3.geoNaturalEarth1().fitSize([width, height], world);\r\n      const path = d3.geoPath().projection(mapProjection);\r\n      projectionRef.current = mapProjection;\r\n\r\n      // 创建主要的g元素用于缩放变换\r\n      const g = svg.append('g').attr('class', 'map-group');\r\n\r\n      // 绘制国家\r\n      g.append('g')\r\n        .attr('class', 'countries')\r\n        .selectAll('path')\r\n        .data(world.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('d', path)\r\n        .attr('fill', '#f0f0f0')\r\n        .attr('stroke', '#666')\r\n        .attr('stroke-width', 0.5)\r\n        .style('pointer-events', 'all')\r\n        .append('title')\r\n        .text(d => {\r\n          if (!d || !d.properties) return 'Unknown';\r\n          const countryName = d.properties.NAME || d.properties.name || 'Unknown';\r\n          try {\r\n            const centroid = d3.geoCentroid(d);\r\n            if (centroid && centroid.length >= 2) {\r\n              const [lon, lat] = centroid;\r\n              const pm25Value = getPM25ForLocation(lat, lon);\r\n              return pm25Value !== null \r\n                ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                : `${countryName}`;\r\n            }\r\n          } catch (error) {\r\n            console.warn('Error calculating centroid for country:', countryName, error);\r\n          }\r\n          return countryName;\r\n        });\r\n\r\n      // 绘制城市点\r\n      const citiesGroup = g.append('g').attr('class', 'cities');\r\n      \r\n      cities.forEach(city => {\r\n        const projected = mapProjection([city.lng, city.lat]);\r\n        if (projected) {\r\n          citiesGroup.append('circle')\r\n            .attr('cx', projected[0])\r\n            .attr('cy', projected[1])\r\n            .attr('r', 5)\r\n            .attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2')\r\n            .attr('fill-opacity', 0.7)  // 设置填充透明度为70%\r\n            .attr('stroke', '#fff')\r\n            .attr('stroke-width', 2)\r\n            .attr('stroke-opacity', 0.9)  // 设置边框透明度为90%\r\n            .style('cursor', 'pointer')\r\n            .on('click', () => {\r\n              if (onCitySelect) onCitySelect(city);\r\n            })\r\n            .append('title')\r\n            .text(() => {\r\n              const pm25Value = getPM25ForLocation(city.lat, city.lng);\r\n              return pm25Value !== null \r\n                ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                : `${city.city}, ${city.country}\\nPM2.5: No data`;\r\n            });\r\n        }\r\n      });\r\n\r\n      // 应用变换\r\n      g.attr('transform', `translate(${transform.x}, ${transform.y}) scale(${transform.k})`);\r\n      \r\n      // 调整元素大小\r\n      if (transform.k > 0) {\r\n        citiesGroup.selectAll('circle')\r\n          .attr('r', 5 / transform.k)\r\n          .attr('stroke-width', 2 / transform.k);\r\n        \r\n        g.selectAll('.countries path')\r\n          .attr('stroke-width', 0.5 / transform.k);\r\n      }\r\n\r\n      // 添加缩放控制按钮\r\n      const controls = svg.append('g')\r\n        .attr('class', 'zoom-controls')\r\n        .raise();  // 将控制按钮组移到SVG的最上层\r\n      \r\n      const buttonData = [\r\n        { text: '+', action: handleZoomIn, title: '放大' },\r\n        { text: '−', action: handleZoomOut, title: '缩小' },\r\n        { text: '⌂', action: handleReset, title: '重置' }\r\n      ];\r\n\r\n      buttonData.forEach((btn, i) => {\r\n        const button = controls.append('g')\r\n          .attr('class', 'zoom-button')\r\n          .attr('transform', `translate(20, ${20 + i * 35})`)\r\n          .style('cursor', 'pointer')\r\n          .on('click', btn.action);\r\n\r\n        button.append('rect')\r\n          .attr('width', 30)\r\n          .attr('height', 30)\r\n          .attr('fill', 'white')\r\n          .attr('stroke', '#ccc')\r\n          .attr('rx', 3);\r\n\r\n        button.append('text')\r\n          .attr('x', 15)\r\n          .attr('y', 20)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('font-size', 16)\r\n          .attr('font-weight', 'bold')\r\n          .text(btn.text);\r\n\r\n        button.append('title').text(btn.title);\r\n      });\r\n\r\n      // 初始渲染Canvas\r\n      if (canvasRef.current && pm25Loader && pm25Loader.data) {\r\n        try {\r\n          const canvas = canvasRef.current;\r\n          const ctx = canvas.getContext('2d');\r\n          if (!ctx) {\r\n            console.error('Failed to get canvas context');\r\n            return;\r\n          }\r\n          PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, mapProjection, transform, cities, width, height);\r\n        } catch (error) {\r\n          console.error('Error rendering PM2.5 data:', error);\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error rendering map:', error);\r\n    }\r\n  }, [world, cities, selectedCities, onCitySelect, isLoading, transform, pm25Loader]);\r\n\r\n  // 添加全局鼠标事件监听器\r\n  useEffect(() => {\r\n    const handleGlobalMouseMove = (event) => handleMouseMove(event);\r\n    const handleGlobalMouseUp = () => handleMouseUp();\r\n\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleGlobalMouseMove);\r\n      document.addEventListener('mouseup', handleGlobalMouseUp);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\r\n    };\r\n  }, [isDragging, lastMouse]);\r\n\r\n  // 添加wheel事件监听器\r\n  useEffect(() => {\r\n    const svg = svgRef.current;\r\n    if (!svg) return;\r\n\r\n    svg.addEventListener('wheel', handleWheel, { passive: false });\r\n\r\n    return () => {\r\n      svg.removeEventListener('wheel', handleWheel);\r\n    };\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', margin: 20, color: '#666' }}>\r\n        Loading PM2.5 data and map...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div style={{ position: 'relative', display: 'inline-block' }}>\r\n        <svg \r\n          ref={svgRef} \r\n          style={{ cursor: isDragging ? 'grabbing' : 'grab' }}\r\n          onMouseDown={handleMouseDown}\r\n        />\r\n        \r\n        {/* Canvas渲染PM2.5网格 */}\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1000}\r\n          height={500}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            pointerEvents: 'none',\r\n            zIndex: 1\r\n          }}\r\n        />\r\n      </div>\r\n      {/* <div style={{marginTop: 8, color: '#888'}}>\r\n        拖拽平移，滚轮缩放，点击按钮控制 - 缩放比例: {transform.k.toFixed(2)}x\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}