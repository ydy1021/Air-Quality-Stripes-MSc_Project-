{"ast":null,"code":"/**\n * Throws a non-valid NetCDF exception if the statement it's true\n * @ignore\n * @param statement - Throws if true\n * @param reason - Reason to throw\n */\nexport function notNetcdf(statement, reason) {\n  if (statement) {\n    throw new TypeError(`Not a valid NetCDF v3.x file: ${reason}`);\n  }\n}\n/**\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\n * @param buffer - Buffer for the file data\n */\nexport function padding(buffer) {\n  if (buffer.offset % 4 !== 0) {\n    buffer.skip(4 - buffer.offset % 4);\n  }\n}\n/**\n * Reads the name\n * @param buffer - Buffer for the file data\n * @return Name\n */\nexport function readName(buffer) {\n  // Read name\n  const nameLength = buffer.readUint32();\n  const name = buffer.readChars(nameLength);\n  // validate name\n  // TODO\n  // Apply padding\n  padding(buffer);\n  return name;\n}","map":{"version":3,"names":["notNetcdf","statement","reason","TypeError","padding","buffer","offset","skip","readName","nameLength","readUint32","name","readChars"],"sources":["E:\\Master2\\FYP\\Global\\Global\\dashboard_ComparisionVersion\\node_modules\\netcdfjs\\src\\utils.ts"],"sourcesContent":["import { IOBuffer } from 'iobuffer';\n/**\n * Throws a non-valid NetCDF exception if the statement it's true\n * @ignore\n * @param statement - Throws if true\n * @param reason - Reason to throw\n */\nexport function notNetcdf(statement: boolean, reason: string) {\n  if (statement) {\n    throw new TypeError(`Not a valid NetCDF v3.x file: ${reason}`);\n  }\n}\n\n/**\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\n * @param buffer - Buffer for the file data\n */\nexport function padding(buffer: IOBuffer) {\n  if (buffer.offset % 4 !== 0) {\n    buffer.skip(4 - (buffer.offset % 4));\n  }\n}\n\n/**\n * Reads the name\n * @param buffer - Buffer for the file data\n * @return Name\n */\nexport function readName(buffer: IOBuffer) {\n  // Read name\n  const nameLength = buffer.readUint32();\n  const name = buffer.readChars(nameLength);\n\n  // validate name\n  // TODO\n  // Apply padding\n  padding(buffer);\n  return name;\n}\n"],"mappings":"AACA;;;;;;AAMA,OAAM,SAAUA,SAASA,CAACC,SAAkB,EAAEC,MAAc;EAC1D,IAAID,SAAS,EAAE;IACb,MAAM,IAAIE,SAAS,CAAC,iCAAiCD,MAAM,EAAE,CAAC;;AAElE;AAEA;;;;AAIA,OAAM,SAAUE,OAAOA,CAACC,MAAgB;EACtC,IAAIA,MAAM,CAACC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC3BD,MAAM,CAACE,IAAI,CAAC,CAAC,GAAIF,MAAM,CAACC,MAAM,GAAG,CAAE,CAAC;;AAExC;AAEA;;;;;AAKA,OAAM,SAAUE,QAAQA,CAACH,MAAgB;EACvC;EACA,MAAMI,UAAU,GAAGJ,MAAM,CAACK,UAAU,EAAE;EACtC,MAAMC,IAAI,GAAGN,MAAM,CAACO,SAAS,CAACH,UAAU,CAAC;EAEzC;EACA;EACA;EACAL,OAAO,CAACC,MAAM,CAAC;EACf,OAAOM,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}