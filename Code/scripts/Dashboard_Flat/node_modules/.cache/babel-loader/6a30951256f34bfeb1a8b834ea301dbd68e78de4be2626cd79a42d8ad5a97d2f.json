{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard\\\\src\\\\TrendChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PM25_CSV = 'V1pt6_Cities_Data_PM2pt5.csv';\nfunction TrendChart({\n  selectedCities\n}) {\n  _s();\n  const svgRef = useRef();\n  const [data, setData] = useState(null);\n  const [years, setYears] = useState([]);\n  useEffect(() => {\n    d3.csv(PM25_CSV).then(raw => {\n      // 第一列是年份，后面是城市\n      const years = raw.map(row => +row['Year']);\n      setYears(years);\n      setData(raw);\n    });\n  }, []);\n  useEffect(() => {\n    if (!data || selectedCities.length !== 2) return;\n    const width = 700,\n      height = 350,\n      margin = {\n        top: 40,\n        right: 40,\n        bottom: 40,\n        left: 60\n      };\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll('*').remove();\n\n    // 取城市名格式\n    const getCol = c => `${c.city}, ${c.country}`;\n    const city1 = getCol(selectedCities[0]);\n    const city2 = getCol(selectedCities[1]);\n    const y1 = data.map(row => +row[city1]);\n    const y2 = data.map(row => +row[city2]);\n    // 调试打印\n\n    console.log('city1', city1);\n    console.log('city2', city2);\n    console.log('表头', Object.keys(data[0]));\n    console.log('示例行', data[0]);\n\n    // x/y 轴\n    const x = d3.scaleLinear().domain(d3.extent(years)).range([margin.left, width - margin.right]);\n    const y = d3.scaleLinear().domain([0, d3.max([...y1, ...y2]) * 1.1]).range([height - margin.bottom, margin.top]);\n\n    // 画线\n    const line = d3.line().x((d, i) => x(years[i])).y(d => y(d));\n    svg.append('path').datum(y1).attr('fill', 'none').attr('stroke', '#1976d2').attr('stroke-width', 2.5).attr('d', line);\n    svg.append('path').datum(y2).attr('fill', 'none').attr('stroke', '#d32f2f').attr('stroke-width', 2.5).attr('d', line);\n\n    // 画点\n    svg.selectAll('.dot1').data(y1).enter().append('circle').attr('class', 'dot1').attr('cx', (d, i) => x(years[i])).attr('cy', d => y(d)).attr('r', 3).attr('fill', '#1976d2');\n    svg.selectAll('.dot2').data(y2).enter().append('circle').attr('class', 'dot2').attr('cx', (d, i) => x(years[i])).attr('cy', d => y(d)).attr('r', 3).attr('fill', '#d32f2f');\n\n    // 轴\n    svg.append('g').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickFormat(d3.format('d')));\n    svg.append('g').attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(y));\n\n    // 标题和图例\n    svg.append('text').attr('x', width / 2).attr('y', margin.top / 2).attr('text-anchor', 'middle').attr('font-size', 18).attr('font-weight', 'bold').text(`${city1} vs ${city2} PM2.5 趋势对比`);\n    svg.append('circle').attr('cx', width - 180).attr('cy', 30).attr('r', 6).attr('fill', '#1976d2');\n    svg.append('text').attr('x', width - 170).attr('y', 35).text(city1).attr('alignment-baseline', 'middle').attr('font-size', 13);\n    svg.append('circle').attr('cx', width - 100).attr('cy', 30).attr('r', 6).attr('fill', '#d32f2f');\n    svg.append('text').attr('x', width - 90).attr('y', 35).text(city2).attr('alignment-baseline', 'middle').attr('font-size', 13);\n  }, [data, years, selectedCities]);\n  if (selectedCities.length !== 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: 32,\n        color: '#888'\n      },\n      children: \"\\u8BF7\\u9009\\u62E9\\u4E24\\u4E2A\\u57CE\\u5E02\\u8FDB\\u884C\\u8D8B\\u52BF\\u5BF9\\u6BD4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(TrendChart, \"tCuehAtalT5wa4QAiFXuTgeegdI=\");\n_c = TrendChart;\nexport default TrendChart;\nvar _c;\n$RefreshReg$(_c, \"TrendChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","PM25_CSV","TrendChart","selectedCities","_s","svgRef","data","setData","years","setYears","csv","then","raw","map","row","length","width","height","margin","top","right","bottom","left","svg","select","current","attr","selectAll","remove","getCol","c","city","country","city1","city2","y1","y2","console","log","Object","keys","x","scaleLinear","domain","extent","range","y","max","line","d","i","append","datum","enter","call","axisBottom","tickFormat","format","axisLeft","text","style","textAlign","color","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard/src/TrendChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst PM25_CSV = 'V1pt6_Cities_Data_PM2pt5.csv';\r\n\r\nfunction TrendChart({ selectedCities }) {\r\n  const svgRef = useRef();\r\n  const [data, setData] = useState(null);\r\n  const [years, setYears] = useState([]);\r\n\r\n  useEffect(() => {\r\n    d3.csv(PM25_CSV).then(raw => {\r\n      // 第一列是年份，后面是城市\r\n      const years = raw.map(row => +row['Year']);\r\n      setYears(years);\r\n      setData(raw);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data || selectedCities.length !== 2) return;\r\n    const width = 700, height = 350, margin = {top: 40, right: 40, bottom: 40, left: 60};\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width)\r\n      .attr('height', height);\r\n    svg.selectAll('*').remove();\r\n\r\n    // 取城市名格式\r\n    const getCol = c => `${c.city}, ${c.country}`;\r\n    const city1 = getCol(selectedCities[0]);\r\n    const city2 = getCol(selectedCities[1]);\r\n    const y1 = data.map(row => +row[city1]);\r\n    const y2 = data.map(row => +row[city2]);\r\n    // 调试打印\r\n    \r\n    console.log('city1', city1);\r\nconsole.log('city2', city2);\r\nconsole.log('表头', Object.keys(data[0]));\r\nconsole.log('示例行', data[0]);\r\n\r\n    // x/y 轴\r\n    const x = d3.scaleLinear().domain(d3.extent(years)).range([margin.left, width - margin.right]);\r\n    const y = d3.scaleLinear().domain([0, d3.max([...y1, ...y2]) * 1.1]).range([height - margin.bottom, margin.top]);\r\n\r\n    // 画线\r\n    const line = d3.line()\r\n      .x((d, i) => x(years[i]))\r\n      .y(d => y(d));\r\n\r\n    svg.append('path')\r\n      .datum(y1)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#1976d2')\r\n      .attr('stroke-width', 2.5)\r\n      .attr('d', line);\r\n    svg.append('path')\r\n      .datum(y2)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#d32f2f')\r\n      .attr('stroke-width', 2.5)\r\n      .attr('d', line);\r\n\r\n    // 画点\r\n    svg.selectAll('.dot1')\r\n      .data(y1)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot1')\r\n      .attr('cx', (d, i) => x(years[i]))\r\n      .attr('cy', d => y(d))\r\n      .attr('r', 3)\r\n      .attr('fill', '#1976d2');\r\n    svg.selectAll('.dot2')\r\n      .data(y2)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot2')\r\n      .attr('cx', (d, i) => x(years[i]))\r\n      .attr('cy', d => y(d))\r\n      .attr('r', 3)\r\n      .attr('fill', '#d32f2f');\r\n\r\n    // 轴\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height - margin.bottom})`)\r\n      .call(d3.axisBottom(x).tickFormat(d3.format('d')));\r\n    svg.append('g')\r\n      .attr('transform', `translate(${margin.left},0)`)\r\n      .call(d3.axisLeft(y));\r\n\r\n    // 标题和图例\r\n    svg.append('text')\r\n      .attr('x', width / 2)\r\n      .attr('y', margin.top / 2)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('font-size', 18)\r\n      .attr('font-weight', 'bold')\r\n      .text(`${city1} vs ${city2} PM2.5 趋势对比`);\r\n    svg.append('circle').attr('cx', width - 180).attr('cy', 30).attr('r', 6).attr('fill', '#1976d2');\r\n    svg.append('text').attr('x', width - 170).attr('y', 35).text(city1).attr('alignment-baseline', 'middle').attr('font-size', 13);\r\n    svg.append('circle').attr('cx', width - 100).attr('cy', 30).attr('r', 6).attr('fill', '#d32f2f');\r\n    svg.append('text').attr('x', width - 90).attr('y', 35).text(city2).attr('alignment-baseline', 'middle').attr('font-size', 13);\r\n  }, [data, years, selectedCities]);\r\n\r\n  if (selectedCities.length !== 2) {\r\n    return <div style={{textAlign: 'center', margin: 32, color: '#888'}}>请选择两个城市进行趋势对比</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrendChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}