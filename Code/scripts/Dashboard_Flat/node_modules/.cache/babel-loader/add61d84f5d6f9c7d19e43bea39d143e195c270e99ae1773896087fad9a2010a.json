{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard_ComparisionVersion\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\nconst CITIES_JSON = 'cities_with_coords.json';\nfunction Map({\n  onCitySelect,\n  selectedCities,\n  maxCities = 2\n}) {\n  _s();\n  const svgRef = useRef();\n  const [cities, setCities] = useState([]);\n  const [world, setWorld] = useState(null);\n  useEffect(() => {\n    d3.json(WORLD_GEOJSON_URL).then(setWorld);\n    d3.json(CITIES_JSON).then(setCities);\n  }, []);\n  useEffect(() => {\n    if (!world || !cities.length) return;\n    const width = 1000,\n      height = 500;\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll('*').remove();\n\n    // 投影\n    const projection = d3.geoNaturalEarth1().fitSize([width, height], world);\n    const path = d3.geoPath().projection(projection);\n\n    // 绘制地图\n    svg.append('g').selectAll('path').data(world.features).enter().append('path').attr('d', path).attr('fill', '#e0e0e0').attr('stroke', '#888');\n\n    // 绘制城市点\n    svg.append('g').selectAll('circle').data(cities).enter().append('circle').attr('cx', d => projection([d.lng, d.lat])[0]).attr('cy', d => projection([d.lng, d.lat])[1]).attr('r', 5).attr('fill', d => selectedCities.find(c => c.city === d.city && c.country === d.country) ? '#d32f2f' : '#1976d2').attr('stroke', '#fff').attr('stroke-width', 1).style('cursor', 'pointer').on('click', (event, d) => {\n      onCitySelect(d);\n    }).append('title').text(d => `${d.city}, ${d.country}`);\n  }, [world, cities, selectedCities, onCitySelect, maxCities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        color: '#888'\n      },\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"Tg8a0EDC82vYQftGRMTVbvqoEzQ=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","topojson","jsxDEV","_jsxDEV","WORLD_GEOJSON_URL","CITIES_JSON","Map","onCitySelect","selectedCities","maxCities","_s","svgRef","cities","setCities","world","setWorld","json","then","length","width","height","svg","select","current","attr","selectAll","remove","projection","geoNaturalEarth1","fitSize","path","geoPath","append","data","features","enter","d","lng","lat","find","c","city","country","style","on","event","text","textAlign","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","color","_c","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard_ComparisionVersion/src/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as topojson from 'topojson-client';\r\n\r\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\r\nconst CITIES_JSON = 'cities_with_coords.json';\r\n\r\nfunction Map({ onCitySelect, selectedCities, maxCities = 2 }) {\r\n  const svgRef = useRef();\r\n  const [cities, setCities] = useState([]);\r\n  const [world, setWorld] = useState(null);\r\n\r\n  useEffect(() => {\r\n    d3.json(WORLD_GEOJSON_URL).then(setWorld);\r\n    d3.json(CITIES_JSON).then(setCities);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!world || !cities.length) return;\r\n    const width = 1000, height = 500;\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width)\r\n      .attr('height', height);\r\n    svg.selectAll('*').remove();\r\n\r\n    // 投影\r\n    const projection = d3.geoNaturalEarth1().fitSize([width, height], world);\r\n    const path = d3.geoPath().projection(projection);\r\n\r\n    // 绘制地图\r\n    svg.append('g')\r\n      .selectAll('path')\r\n      .data(world.features)\r\n      .enter()\r\n      .append('path')\r\n      .attr('d', path)\r\n      .attr('fill', '#e0e0e0')\r\n      .attr('stroke', '#888');\r\n\r\n    // 绘制城市点\r\n    svg.append('g')\r\n      .selectAll('circle')\r\n      .data(cities)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('cx', d => projection([d.lng, d.lat])[0])\r\n      .attr('cy', d => projection([d.lng, d.lat])[1])\r\n      .attr('r', 5)\r\n      .attr('fill', d => selectedCities.find(c => c.city === d.city && c.country === d.country) ? '#d32f2f' : '#1976d2')\r\n      .attr('stroke', '#fff')\r\n      .attr('stroke-width', 1)\r\n      .style('cursor', 'pointer')\r\n      .on('click', (event, d) => {\r\n        onCitySelect(d);\r\n      })\r\n      .append('title')\r\n      .text(d => `${d.city}, ${d.country}`);\r\n  }, [world, cities, selectedCities, onCitySelect, maxCities]);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <svg ref={svgRef}></svg>\r\n      <div style={{marginTop: 8, color: '#888'}}>*</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}