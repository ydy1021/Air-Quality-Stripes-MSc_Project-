{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard_ComparisionVersion\\\\src\\\\FixedMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport PM25DataLoader from './PM25DataLoader';\nimport PM25Canvas from './PM25Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\nconst CITIES_JSON = 'cities_with_coords.json';\nfunction FixedMap({\n  onCitySelect,\n  selectedCities,\n  maxCities = 2\n}) {\n  _s();\n  const svgRef = useRef();\n  const canvasRef = useRef();\n  const [cities, setCities] = useState([]);\n  const [world, setWorld] = useState(null);\n  const [pm25Loader, setPm25Loader] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [zoomInitialized, setZoomInitialized] = useState(false);\n\n  // 获取地理位置的PM2.5值\n  const getPM25ForLocation = (lat, lon) => {\n    if (!pm25Loader) return null;\n    return pm25Loader.getPM25Value(lat, lon);\n  };\n\n  // 加载数据\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        const [worldData, citiesData] = await Promise.all([d3.json(WORLD_GEOJSON_URL), d3.json(CITIES_JSON)]);\n        if (worldData && worldData.features) {\n          setWorld(worldData);\n        }\n        if (citiesData && Array.isArray(citiesData)) {\n          setCities(citiesData);\n        }\n\n        // 加载PM2.5数据\n        const loader = new PM25DataLoader();\n        const success = await loader.loadData();\n        if (success) {\n          setPm25Loader(loader);\n          console.log('PM2.5 data stats:', loader.getDataStats());\n        } else {\n          console.warn('PM2.5 data loading failed, using default colors');\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // 绘制地图 - 延迟初始化zoom\n  useEffect(() => {\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current) return;\n\n    // 延迟初始化，避免React useState冲突\n    setTimeout(() => {\n      try {\n        const width = 1000,\n          height = 500;\n        const svg = d3.select(svgRef.current);\n\n        // 清除之前的内容\n        svg.selectAll('*').remove();\n\n        // 设置SVG尺寸\n        svg.attr('width', width).attr('height', height);\n\n        // 投影\n        const projection = d3.geoNaturalEarth1().fitSize([width, height], world);\n        const path = d3.geoPath().projection(projection);\n\n        // 创建主要的g元素用于缩放变换\n        const g = svg.append('g').attr('class', 'map-group');\n\n        // 绘制国家\n        g.append('g').attr('class', 'countries').selectAll('path').data(world.features).enter().append('path').attr('d', path).attr('fill', '#f0f0f0').attr('stroke', '#666').attr('stroke-width', 0.5).style('pointer-events', 'all').append('title').text(d => {\n          if (!d || !d.properties) return 'Unknown';\n          const countryName = d.properties.NAME || d.properties.name || 'Unknown';\n          try {\n            const centroid = d3.geoCentroid(d);\n            if (centroid && centroid.length >= 2) {\n              const [lon, lat] = centroid;\n              const pm25Value = getPM25ForLocation(lat, lon);\n              return pm25Value !== null ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${countryName}`;\n            }\n          } catch (error) {\n            console.warn('Error calculating centroid for country:', countryName, error);\n          }\n          return countryName;\n        });\n\n        // 绘制城市点\n        const citiesGroup = g.append('g').attr('class', 'cities');\n        cities.forEach(city => {\n          const projected = projection([city.lng, city.lat]);\n          if (projected) {\n            citiesGroup.append('circle').attr('cx', projected[0]).attr('cy', projected[1]).attr('r', 5).attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2').attr('stroke', '#fff').attr('stroke-width', 2).style('cursor', 'pointer').on('click', () => {\n              if (onCitySelect) onCitySelect(city);\n            }).append('title').text(() => {\n              const pm25Value = getPM25ForLocation(city.lat, city.lng);\n              return pm25Value !== null ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³` : `${city.city}, ${city.country}\\nPM2.5: No data`;\n            });\n          }\n        });\n\n        // 创建缩放行为 - 使用更安全的方式\n        const zoom = d3.zoom().scaleExtent([0.5, 8]).on('zoom', event => {\n          try {\n            const {\n              transform\n            } = event;\n            g.attr('transform', transform);\n\n            // 调整元素大小\n            if (transform.k > 0) {\n              citiesGroup.selectAll('circle').attr('r', 5 / transform.k).attr('stroke-width', 2 / transform.k);\n              g.selectAll('.countries path').attr('stroke-width', 0.5 / transform.k);\n            }\n\n            // 更新Canvas\n            if (canvasRef.current && pm25Loader) {\n              const canvas = canvasRef.current;\n              const ctx = canvas.getContext('2d');\n              ctx.clearRect(0, 0, width, height);\n\n              // 重新渲染PM2.5数据\n              if (pm25Loader.data && pm25Loader.data.data) {\n                PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, projection, transform, cities, width, height);\n              }\n            }\n          } catch (error) {\n            console.error('Zoom error:', error);\n          }\n        });\n\n        // 应用缩放行为\n        svg.call(zoom);\n\n        // 添加缩放控制按钮\n        const controls = svg.append('g').attr('class', 'zoom-controls');\n        const buttonData = [{\n          text: '+',\n          action: () => svg.transition().call(zoom.scaleBy, 1.5),\n          title: '放大'\n        }, {\n          text: '−',\n          action: () => svg.transition().call(zoom.scaleBy, 1 / 1.5),\n          title: '缩小'\n        }, {\n          text: '⌂',\n          action: () => svg.transition().call(zoom.transform, d3.zoomIdentity),\n          title: '重置'\n        }];\n        buttonData.forEach((btn, i) => {\n          const button = controls.append('g').attr('class', 'zoom-button').attr('transform', `translate(20, ${20 + i * 35})`).style('cursor', 'pointer').on('click', btn.action);\n          button.append('rect').attr('width', 30).attr('height', 30).attr('fill', 'white').attr('stroke', '#ccc').attr('rx', 3);\n          button.append('text').attr('x', 15).attr('y', 20).attr('text-anchor', 'middle').attr('font-size', 16).attr('font-weight', 'bold').text(btn.text);\n          button.append('title').text(btn.title);\n        });\n\n        // 初始渲染Canvas\n        if (canvasRef.current && pm25Loader && pm25Loader.data) {\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, projection, d3.zoomIdentity, cities, width, height);\n        }\n        setZoomInitialized(true);\n      } catch (error) {\n        console.error('Error rendering fixed map:', error);\n      }\n    }, 100); // 100ms延迟\n  }, [world, cities, selectedCities, onCitySelect, isLoading, pm25Loader]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: 20,\n        color: '#666'\n      },\n      children: \"Loading PM2.5 data and map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1000,\n        height: 500,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        color: '#888'\n      },\n      children: zoomInitialized ? '修复版地图 - 拖拽平移，滚轮缩放，点击按钮控制' : '初始化中...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n_s(FixedMap, \"DDt9YUDEBJo1DDS5QNcTV0dZ820=\");\n_c = FixedMap;\nexport default FixedMap;\nvar _c;\n$RefreshReg$(_c, \"FixedMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","PM25DataLoader","PM25Canvas","jsxDEV","_jsxDEV","WORLD_GEOJSON_URL","CITIES_JSON","FixedMap","onCitySelect","selectedCities","maxCities","_s","svgRef","canvasRef","cities","setCities","world","setWorld","pm25Loader","setPm25Loader","isLoading","setIsLoading","zoomInitialized","setZoomInitialized","getPM25ForLocation","lat","lon","getPM25Value","loadData","worldData","citiesData","Promise","all","json","features","Array","isArray","loader","success","console","log","getDataStats","warn","error","length","current","setTimeout","width","height","svg","select","selectAll","remove","attr","projection","geoNaturalEarth1","fitSize","path","geoPath","g","append","data","enter","style","text","d","properties","countryName","NAME","name","centroid","geoCentroid","pm25Value","toFixed","citiesGroup","forEach","city","projected","lng","find","c","country","on","zoom","scaleExtent","event","transform","k","canvas","ctx","getContext","clearRect","renderPM25Data","call","controls","buttonData","action","transition","scaleBy","title","zoomIdentity","btn","i","button","textAlign","margin","color","children","fileName","_jsxFileName","lineNumber","columnNumber","position","display","ref","top","left","pointerEvents","zIndex","marginTop","_c","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard_ComparisionVersion/src/FixedMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport PM25DataLoader from './PM25DataLoader';\r\nimport PM25Canvas from './PM25Canvas';\r\n\r\nconst WORLD_GEOJSON_URL = 'world-110m.geojson';\r\nconst CITIES_JSON = 'cities_with_coords.json';\r\n\r\nfunction FixedMap({ onCitySelect, selectedCities, maxCities = 2 }) {\r\n  const svgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const [cities, setCities] = useState([]);\r\n  const [world, setWorld] = useState(null);\r\n  const [pm25Loader, setPm25Loader] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [zoomInitialized, setZoomInitialized] = useState(false);\r\n\r\n  // 获取地理位置的PM2.5值\r\n  const getPM25ForLocation = (lat, lon) => {\r\n    if (!pm25Loader) return null;\r\n    return pm25Loader.getPM25Value(lat, lon);\r\n  };\r\n\r\n  // 加载数据\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const [worldData, citiesData] = await Promise.all([\r\n          d3.json(WORLD_GEOJSON_URL),\r\n          d3.json(CITIES_JSON)\r\n        ]);\r\n        \r\n        if (worldData && worldData.features) {\r\n          setWorld(worldData);\r\n        }\r\n        if (citiesData && Array.isArray(citiesData)) {\r\n          setCities(citiesData);\r\n        }\r\n\r\n        // 加载PM2.5数据\r\n        const loader = new PM25DataLoader();\r\n        const success = await loader.loadData();\r\n        if (success) {\r\n          setPm25Loader(loader);\r\n          console.log('PM2.5 data stats:', loader.getDataStats());\r\n        } else {\r\n          console.warn('PM2.5 data loading failed, using default colors');\r\n        }\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // 绘制地图 - 延迟初始化zoom\r\n  useEffect(() => {\r\n    if (!world || !world.features || !cities.length || isLoading || !svgRef.current) return;\r\n    \r\n    // 延迟初始化，避免React useState冲突\r\n    setTimeout(() => {\r\n      try {\r\n        const width = 1000, height = 500;\r\n        const svg = d3.select(svgRef.current);\r\n        \r\n        // 清除之前的内容\r\n        svg.selectAll('*').remove();\r\n        \r\n        // 设置SVG尺寸\r\n        svg.attr('width', width).attr('height', height);\r\n\r\n        // 投影\r\n        const projection = d3.geoNaturalEarth1().fitSize([width, height], world);\r\n        const path = d3.geoPath().projection(projection);\r\n\r\n        // 创建主要的g元素用于缩放变换\r\n        const g = svg.append('g').attr('class', 'map-group');\r\n\r\n        // 绘制国家\r\n        g.append('g')\r\n          .attr('class', 'countries')\r\n          .selectAll('path')\r\n          .data(world.features)\r\n          .enter()\r\n          .append('path')\r\n          .attr('d', path)\r\n          .attr('fill', '#f0f0f0')\r\n          .attr('stroke', '#666')\r\n          .attr('stroke-width', 0.5)\r\n          .style('pointer-events', 'all')\r\n          .append('title')\r\n          .text(d => {\r\n            if (!d || !d.properties) return 'Unknown';\r\n            const countryName = d.properties.NAME || d.properties.name || 'Unknown';\r\n            try {\r\n              const centroid = d3.geoCentroid(d);\r\n              if (centroid && centroid.length >= 2) {\r\n                const [lon, lat] = centroid;\r\n                const pm25Value = getPM25ForLocation(lat, lon);\r\n                return pm25Value !== null \r\n                  ? `${countryName}\\nCenter PM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                  : `${countryName}`;\r\n              }\r\n            } catch (error) {\r\n              console.warn('Error calculating centroid for country:', countryName, error);\r\n            }\r\n            return countryName;\r\n          });\r\n\r\n        // 绘制城市点\r\n        const citiesGroup = g.append('g').attr('class', 'cities');\r\n        \r\n        cities.forEach(city => {\r\n          const projected = projection([city.lng, city.lat]);\r\n          if (projected) {\r\n            citiesGroup.append('circle')\r\n              .attr('cx', projected[0])\r\n              .attr('cy', projected[1])\r\n              .attr('r', 5)\r\n              .attr('fill', selectedCities.find(c => c.city === city.city && c.country === city.country) ? '#d32f2f' : '#1976d2')\r\n              .attr('stroke', '#fff')\r\n              .attr('stroke-width', 2)\r\n              .style('cursor', 'pointer')\r\n              .on('click', () => {\r\n                if (onCitySelect) onCitySelect(city);\r\n              })\r\n              .append('title')\r\n              .text(() => {\r\n                const pm25Value = getPM25ForLocation(city.lat, city.lng);\r\n                return pm25Value !== null \r\n                  ? `${city.city}, ${city.country}\\nPM2.5 (2022): ${pm25Value.toFixed(1)} µg/m³`\r\n                  : `${city.city}, ${city.country}\\nPM2.5: No data`;\r\n              });\r\n          }\r\n        });\r\n\r\n        // 创建缩放行为 - 使用更安全的方式\r\n        const zoom = d3.zoom()\r\n          .scaleExtent([0.5, 8])\r\n          .on('zoom', (event) => {\r\n            try {\r\n              const { transform } = event;\r\n              g.attr('transform', transform);\r\n              \r\n              // 调整元素大小\r\n              if (transform.k > 0) {\r\n                citiesGroup.selectAll('circle')\r\n                  .attr('r', 5 / transform.k)\r\n                  .attr('stroke-width', 2 / transform.k);\r\n                \r\n                g.selectAll('.countries path')\r\n                  .attr('stroke-width', 0.5 / transform.k);\r\n              }\r\n              \r\n              // 更新Canvas\r\n              if (canvasRef.current && pm25Loader) {\r\n                const canvas = canvasRef.current;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.clearRect(0, 0, width, height);\r\n                \r\n                // 重新渲染PM2.5数据\r\n                if (pm25Loader.data && pm25Loader.data.data) {\r\n                  PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, projection, transform, cities, width, height);\r\n                }\r\n              }\r\n            } catch (error) {\r\n              console.error('Zoom error:', error);\r\n            }\r\n          });\r\n\r\n        // 应用缩放行为\r\n        svg.call(zoom);\r\n\r\n        // 添加缩放控制按钮\r\n        const controls = svg.append('g').attr('class', 'zoom-controls');\r\n        \r\n        const buttonData = [\r\n          { text: '+', action: () => svg.transition().call(zoom.scaleBy, 1.5), title: '放大' },\r\n          { text: '−', action: () => svg.transition().call(zoom.scaleBy, 1/1.5), title: '缩小' },\r\n          { text: '⌂', action: () => svg.transition().call(zoom.transform, d3.zoomIdentity), title: '重置' }\r\n        ];\r\n\r\n        buttonData.forEach((btn, i) => {\r\n          const button = controls.append('g')\r\n            .attr('class', 'zoom-button')\r\n            .attr('transform', `translate(20, ${20 + i * 35})`)\r\n            .style('cursor', 'pointer')\r\n            .on('click', btn.action);\r\n\r\n          button.append('rect')\r\n            .attr('width', 30)\r\n            .attr('height', 30)\r\n            .attr('fill', 'white')\r\n            .attr('stroke', '#ccc')\r\n            .attr('rx', 3);\r\n\r\n          button.append('text')\r\n            .attr('x', 15)\r\n            .attr('y', 20)\r\n            .attr('text-anchor', 'middle')\r\n            .attr('font-size', 16)\r\n            .attr('font-weight', 'bold')\r\n            .text(btn.text);\r\n\r\n          button.append('title').text(btn.title);\r\n        });\r\n\r\n        // 初始渲染Canvas\r\n        if (canvasRef.current && pm25Loader && pm25Loader.data) {\r\n          const canvas = canvasRef.current;\r\n          const ctx = canvas.getContext('2d');\r\n          PM25Canvas.renderPM25Data(ctx, pm25Loader.data.data, projection, d3.zoomIdentity, cities, width, height);\r\n        }\r\n\r\n        setZoomInitialized(true);\r\n        \r\n      } catch (error) {\r\n        console.error('Error rendering fixed map:', error);\r\n      }\r\n    }, 100); // 100ms延迟\r\n    \r\n  }, [world, cities, selectedCities, onCitySelect, isLoading, pm25Loader]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', margin: 20, color: '#666' }}>\r\n        Loading PM2.5 data and map...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div style={{ position: 'relative', display: 'inline-block' }}>\r\n        <svg ref={svgRef} />\r\n        \r\n        {/* Canvas渲染PM2.5网格 */}\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1000}\r\n          height={500}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            pointerEvents: 'none',\r\n            zIndex: 1\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{marginTop: 8, color: '#888'}}>\r\n        {zoomInitialized ? \r\n          '修复版地图 - 拖拽平移，滚轮缩放，点击按钮控制' :\r\n          '初始化中...'\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}