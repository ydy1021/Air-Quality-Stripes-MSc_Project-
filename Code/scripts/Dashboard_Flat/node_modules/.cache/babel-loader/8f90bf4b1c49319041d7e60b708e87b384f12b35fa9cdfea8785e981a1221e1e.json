{"ast":null,"code":"var _jsxFileName = \"E:\\\\Master2\\\\FYP\\\\Global\\\\Global\\\\dashboard_ComparisionVersion\\\\src\\\\MultiTrendCharts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PM25_CSV = 'V1pt6_Cities_Data_PM2pt5.csv';\n\n// 色阶区间和颜色，与 10_cities_vis.py 保持一致\nconst bounds = [0, 5, 10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 99999];\nconst c_list = ['rgb(164,255,255)',\n// 0 - 5\n'rgb(176,218,233)',\n// 5 - 10\n'rgb(176,206,237)',\n// 10 - 15\n'rgb(249,224,71)',\n// 15 - 20\n'rgb(242,200,75)',\n// 20 - 30\n'rgb(241,166,63)',\n// 30 - 40\n'rgb(233,135,37)',\n// 40 - 50\n'rgb(175,69,83)',\n// 50 - 60\n'rgb(134,59,71)',\n// 60 - 70\n'rgb(103,58,61)',\n// 70 - 80\n'rgb(70,47,48)',\n// 80 - 90\n'rgb(37,36,36)' // 90+\n];\nfunction getColor(val) {\n  for (let i = 0; i < bounds.length - 1; ++i) {\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\n  }\n  return c_list[c_list.length - 1];\n}\nfunction SingleTrend({\n  city,\n  country,\n  data,\n  years\n}) {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data || !city || !country) return;\n    const width = 350,\n      height = 250,\n      margin = {\n        top: 40,\n        right: 20,\n        bottom: 40,\n        left: 50\n      };\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll('*').remove();\n    const col = `${city}, ${country}`;\n    const y = data.map(row => +row[col]);\n    if (!y.length || y.some(isNaN)) return;\n\n    // 1. 色带背景\n    const bandHeight = height - margin.top - margin.bottom;\n    const bandY = margin.top;\n    const bandWidth = (width - margin.left - margin.right) / years.length;\n    years.forEach((year, i) => {\n      svg.append('rect').attr('x', margin.left + i * bandWidth).attr('y', bandY).attr('width', bandWidth).attr('height', bandHeight).attr('fill', getColor(y[i])).attr('stroke', 'none');\n    });\n\n    // 2. Y轴范围固定 0~120\n    const x = d3.scaleLinear().domain([years[0], years[years.length - 1] + 1]).range([margin.left, width - margin.right]);\n    const yScale = d3.scaleLinear().domain([0, 120]).range([height - margin.bottom, margin.top]);\n\n    // 3. 白色粗折线\n    const line = d3.line().x((d, i) => x(years[i] + 0.5)).y(d => yScale(d));\n    svg.append('path').datum(y).attr('fill', 'none').attr('stroke', 'white').attr('stroke-width', 2).attr('d', line);\n\n    // 4. 坐标轴\n    const tickStep = Math.ceil(years.length / 8);\n    let tickVals = years.filter((d, i) => i % tickStep === 0);\n    if (tickVals[tickVals.length - 1] !== years[years.length - 1]) {\n      tickVals.push(years[years.length - 1]);\n    }\n    svg.append('g').attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickFormat(d3.format('d')).tickValues(tickVals));\n    svg.append('g').attr('transform', `translate(${margin.left},0)`).call(d3.axisLeft(yScale).ticks(6));\n\n    // 5. 标题\n    svg.append('text').attr('x', width / 2).attr('y', margin.top / 2).attr('text-anchor', 'middle').attr('font-size', 15).attr('font-weight', 'bold').text(`${city}, ${country}\\n`);\n\n    // 6. Y轴标签（右侧，白色）\n    svg.append('text').attr('x', width - margin.right + 5).attr('y', margin.top).attr('text-anchor', 'start').attr('font-size', 12).attr('fill', 'white').attr('font-weight', 'bold').attr('transform', `rotate(-90,${width - margin.right + 5},${margin.top + bandHeight / 2})`);\n    // .text('PM2.5 concentration (µg/m³)');\n\n    // 7. 去除边框\n    svg.selectAll('rect.background').remove();\n  }, [data, years, city, country]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    style: {\n      background: 'white',\n      borderRadius: 8,\n      boxShadow: '0 2px 8px #0001'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n}\n_s(SingleTrend, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = SingleTrend;\nfunction MultiTrendCharts({\n  selectedCities\n}) {\n  _s2();\n  const [data, setData] = useState(null);\n  const [years, setYears] = useState([]);\n  useEffect(() => {\n    d3.csv(PM25_CSV).then(raw => {\n      setYears(raw.map(row => +row['Year']));\n      setData(raw);\n    });\n  }, []);\n  if (!selectedCities.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      margin: 32,\n      color: '#888'\n    },\n    children: \"Click the cities to see the trends\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 38\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      gap: 24\n    },\n    children: selectedCities.slice(0, 3).map((c, idx) => /*#__PURE__*/_jsxDEV(SingleTrend, {\n      city: c.city,\n      country: c.country,\n      data: data,\n      years: years\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s2(MultiTrendCharts, \"6Lm808ceAl8sDcnxN80vNa7swjA=\");\n_c2 = MultiTrendCharts;\nexport default MultiTrendCharts;\nvar _c, _c2;\n$RefreshReg$(_c, \"SingleTrend\");\n$RefreshReg$(_c2, \"MultiTrendCharts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","PM25_CSV","bounds","c_list","getColor","val","i","length","SingleTrend","city","country","data","years","_s","svgRef","width","height","margin","top","right","bottom","left","svg","select","current","attr","selectAll","remove","col","y","map","row","some","isNaN","bandHeight","bandY","bandWidth","forEach","year","append","x","scaleLinear","domain","range","yScale","line","d","datum","tickStep","Math","ceil","tickVals","filter","push","call","axisBottom","tickFormat","format","tickValues","axisLeft","ticks","text","ref","style","background","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","_c","MultiTrendCharts","selectedCities","_s2","setData","setYears","csv","then","raw","textAlign","color","children","display","justifyContent","gap","slice","c","idx","_c2","$RefreshReg$"],"sources":["E:/Master2/FYP/Global/Global/dashboard_ComparisionVersion/src/MultiTrendCharts.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst PM25_CSV = 'V1pt6_Cities_Data_PM2pt5.csv';\r\n\r\n// 色阶区间和颜色，与 10_cities_vis.py 保持一致\r\nconst bounds = [0, 5, 10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 99999];\r\nconst c_list = [\r\n  'rgb(164,255,255)',  // 0 - 5\r\n  'rgb(176,218,233)',  // 5 - 10\r\n  'rgb(176,206,237)',  // 10 - 15\r\n  'rgb(249,224,71)',   // 15 - 20\r\n  'rgb(242,200,75)',   // 20 - 30\r\n  'rgb(241,166,63)',   // 30 - 40\r\n  'rgb(233,135,37)',   // 40 - 50\r\n  'rgb(175,69,83)',    // 50 - 60\r\n  'rgb(134,59,71)',    // 60 - 70\r\n  'rgb(103,58,61)',    // 70 - 80\r\n  'rgb(70,47,48)',     // 80 - 90\r\n  'rgb(37,36,36)',     // 90+\r\n];\r\n\r\nfunction getColor(val) {\r\n  for (let i = 0; i < bounds.length - 1; ++i) {\r\n    if (val >= bounds[i] && val < bounds[i + 1]) return c_list[i];\r\n  }\r\n  return c_list[c_list.length - 1];\r\n}\r\n\r\nfunction SingleTrend({ city, country, data, years }) {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!data || !city || !country) return;\r\n    const width = 350, height = 250, margin = {top: 40, right: 20, bottom: 40, left: 50};\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width)\r\n      .attr('height', height);\r\n    svg.selectAll('*').remove();\r\n\r\n    const col = `${city}, ${country}`;\r\n    const y = data.map(row => +row[col]);\r\n    if (!y.length || y.some(isNaN)) return;\r\n\r\n    // 1. 色带背景\r\n    const bandHeight = height - margin.top - margin.bottom;\r\n    const bandY = margin.top;\r\n    const bandWidth = (width - margin.left - margin.right) / years.length;\r\n    years.forEach((year, i) => {\r\n      svg.append('rect')\r\n        .attr('x', margin.left + i * bandWidth)\r\n        .attr('y', bandY)\r\n        .attr('width', bandWidth)\r\n        .attr('height', bandHeight)\r\n        .attr('fill', getColor(y[i]))\r\n        .attr('stroke', 'none');\r\n    });\r\n\r\n    // 2. Y轴范围固定 0~120\r\n    const x = d3.scaleLinear().domain([years[0], years[years.length-1]+1]).range([margin.left, width - margin.right]);\r\n    const yScale = d3.scaleLinear().domain([0, 120]).range([height - margin.bottom, margin.top]);\r\n\r\n    // 3. 白色粗折线\r\n    const line = d3.line()\r\n      .x((d, i) => x(years[i] + 0.5))\r\n      .y(d => yScale(d));\r\n    svg.append('path')\r\n      .datum(y)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', 'white')\r\n      .attr('stroke-width', 2)\r\n      .attr('d', line);\r\n\r\n    // 4. 坐标轴\r\n    const tickStep = Math.ceil(years.length / 8);\r\n    let tickVals = years.filter((d, i) => i % tickStep === 0);\r\n    if (tickVals[tickVals.length - 1] !== years[years.length - 1]) {\r\n      tickVals.push(years[years.length - 1]);\r\n    }\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height - margin.bottom})`)\r\n      .call(\r\n        d3.axisBottom(x)\r\n          .tickFormat(d3.format('d'))\r\n          .tickValues(tickVals)\r\n      );\r\n    svg.append('g')\r\n      .attr('transform', `translate(${margin.left},0)`)\r\n      .call(d3.axisLeft(yScale).ticks(6));\r\n\r\n    // 5. 标题\r\n    svg.append('text')\r\n      .attr('x', width / 2)\r\n      .attr('y', margin.top / 2)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('font-size', 15)\r\n      .attr('font-weight', 'bold')\r\n      .text(`${city}, ${country}\\n`);\r\n\r\n    // 6. Y轴标签（右侧，白色）\r\n    svg.append('text')\r\n      .attr('x', width - margin.right + 5)\r\n      .attr('y', margin.top)\r\n      .attr('text-anchor', 'start')\r\n      .attr('font-size', 12)\r\n      .attr('fill', 'white')\r\n      .attr('font-weight', 'bold')\r\n      .attr('transform', `rotate(-90,${width - margin.right + 5},${margin.top + bandHeight/2})`)\r\n     // .text('PM2.5 concentration (µg/m³)');\r\n\r\n    // 7. 去除边框\r\n    svg.selectAll('rect.background').remove();\r\n  }, [data, years, city, country]);\r\n\r\n  return <svg ref={svgRef} style={{background: 'white', borderRadius: 8, boxShadow: '0 2px 8px #0001'}}></svg>;\r\n}\r\n\r\nfunction MultiTrendCharts({ selectedCities }) {\r\n  const [data, setData] = useState(null);\r\n  const [years, setYears] = useState([]);\r\n\r\n  useEffect(() => {\r\n    d3.csv(PM25_CSV).then(raw => {\r\n      setYears(raw.map(row => +row['Year']));\r\n      setData(raw);\r\n    });\r\n  }, []);\r\n\r\n  if (!selectedCities.length) return <div style={{textAlign: 'center', margin: 32, color: '#888'}}>Click the cities to see the trends</div>;\r\n\r\n  return (\r\n    <div style={{display: 'flex', justifyContent: 'center', gap: 24}}>\r\n      {selectedCities.slice(0, 3).map((c, idx) =>\r\n        <SingleTrend key={idx} city={c.city} country={c.country} data={data} years={years} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiTrendCharts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}